{"ast":null,"code":"var _jsxFileName = \"/home/justiceitspc-1/react_app/my-app/src/components/Personal/Personal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport MainTitle from \"../MainTitle\";\nimport ButtonCreate from \"../ButtonCreate\";\nimport MyCreateModal from \"../MyCreateModal\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Personal.scss';\nimport { modalCreate, personalFormFields, personalProps } from \"../../services/mock\";\nimport FormInput from \"../FormInput\";\nimport { errorClass, validateField } from \"../../services/valid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Personal = () => {\n  _s();\n\n  const userId = JSON.parse(localStorage.getItem('userId'));\n  const [isValid, setIsValid] = useState({\n    productCategoryValid: '',\n    firstNameValid: '',\n    lastNameValid: '',\n    companyValid: '',\n    addressValid: '',\n    oldPasswordValid: '',\n    newPasswordValid: ''\n  });\n  const [newPassword, setNewPassword] = useState({});\n  const [getUsers, setGetUsers] = useState(JSON.parse(localStorage.getItem('users')));\n  const [modalCreateShow, setModalCreateShow] = React.useState(false);\n  const getUser = getUsers.filter(user => user.id === userId)[0];\n  const [personalForm, setPersonalForm] = useState(getUser);\n\n  const handleChange = (e, type) => {\n    const {\n      value\n    } = e.target;\n    setPersonalForm(prevForm => ({ ...prevForm,\n      [type]: value\n    }));\n    validateField(type, value, isValid, setIsValid, personalForm);\n  };\n\n  const handleChangePassword = (e, type) => {\n    const {\n      value\n    } = e.target;\n    setNewPassword(prevForm => ({ ...prevForm,\n      [type]: value\n    }));\n    validateField(type, value, isValid, setIsValid, newPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap__top\",\n      children: [/*#__PURE__*/_jsxDEV(MainTitle, {\n        title: personalProps.title,\n        description: personalProps.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"button\",\n        variant: \"primary\",\n        onClick: () => setModalCreateShow(true),\n        children: /*#__PURE__*/_jsxDEV(ButtonCreate, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"personal-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"personal-form__row\",\n          children: personalFormFields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"personal-form__el\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"personal-form__item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"personal-form__item-title\",\n                htmlFor: field.id,\n                children: field.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: `personal-form__item-input ${errorClass(isValid[field.valid])}`,\n                type: field.type,\n                id: field.id,\n                name: field.id,\n                placeholder: field.placeholder,\n                value: personalForm[field.id],\n                onChange: e => handleChange(e, field.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"button\",\n          variant: \"primary\",\n          onClick: e => {\n            e.preventDefault();\n\n            if (personalForm.password === newPassword.oldPassword && newPassword.oldPassword !== newPassword.newPassword) {\n              personalForm.password = newPassword.newPassword;\n            }\n\n            const newUsers = getUsers.map(user => {\n              if (user.email === getUser.email) {\n                user = { ...personalForm\n                };\n                return user;\n              }\n\n              return user;\n            });\n            let values = Object.values(isValid);\n\n            if (values.includes(false) || values.includes('')) {\n              alert('Неверно введена информация');\n            } else {\n              setGetUsers(newUsers);\n              localStorage.setItem('users', JSON.stringify(newUsers));\n              setNewPassword({\n                oldPassword: '',\n                newPassword: ''\n              });\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"personal-form__button\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"personal-form__button-text\",\n              children: \"Save changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), modalCreateShow && /*#__PURE__*/_jsxDEV(MyCreateModal, {\n        info: modalCreate,\n        show: modalCreateShow,\n        onHide: () => setModalCreateShow(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Personal, \"h0X3Vf1w9UGwSW20DYnvV6Dd054=\");\n\n_c = Personal;\nexport default Personal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Personal\");","map":{"version":3,"sources":["/home/justiceitspc-1/react_app/my-app/src/components/Personal/Personal.jsx"],"names":["React","useState","Button","MainTitle","ButtonCreate","MyCreateModal","modalCreate","personalFormFields","personalProps","FormInput","errorClass","validateField","Personal","userId","JSON","parse","localStorage","getItem","isValid","setIsValid","productCategoryValid","firstNameValid","lastNameValid","companyValid","addressValid","oldPasswordValid","newPasswordValid","newPassword","setNewPassword","getUsers","setGetUsers","modalCreateShow","setModalCreateShow","getUser","filter","user","id","personalForm","setPersonalForm","handleChange","e","type","value","target","prevForm","handleChangePassword","title","description","map","field","label","valid","placeholder","preventDefault","password","oldPassword","newUsers","email","values","Object","includes","alert","setItem","stringify"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {Button} from \"react-bootstrap\";\n\nimport MainTitle from \"../MainTitle\";\nimport ButtonCreate from \"../ButtonCreate\";\nimport MyCreateModal from \"../MyCreateModal\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Personal.scss';\nimport {modalCreate, personalFormFields, personalProps} from \"../../services/mock\";\nimport FormInput from \"../FormInput\";\nimport {errorClass, validateField} from \"../../services/valid\";\n\n\nconst Personal = () => {\n\tconst userId = JSON.parse(localStorage.getItem('userId'));\n\tconst [isValid, setIsValid] = useState({\n\t\tproductCategoryValid: '',\n\t\tfirstNameValid: '',\n\t\tlastNameValid: '',\n\t\tcompanyValid: '',\n\t\taddressValid: '',\n\t\toldPasswordValid: '',\n\t\tnewPasswordValid: '',\n\t})\n\tconst [newPassword, setNewPassword] = useState({})\n\tconst [getUsers, setGetUsers] = useState(JSON.parse(localStorage.getItem('users')))\n\tconst [modalCreateShow, setModalCreateShow] = React.useState(false);\n\tconst getUser = getUsers.filter((user) => user.id === userId)[0]\n\tconst [personalForm, setPersonalForm] = useState(getUser);\n\n\tconst handleChange = (e, type) => {\n\t\tconst {value} = e.target\n\t\tsetPersonalForm((prevForm) => ({\n\t\t\t...prevForm,\n\t\t\t[type]: value,\n\t\t}))\n\t\tvalidateField(type, value, isValid, setIsValid, personalForm)\n\t}\n\n\tconst handleChangePassword = (e, type) => {\n\t\tconst {value} = e.target\n\t\tsetNewPassword((prevForm) => ({\n\t\t\t...prevForm,\n\t\t\t[type]: value,\n\t\t}))\n\t\tvalidateField(type, value, isValid, setIsValid, newPassword)\n\t}\n\n\treturn (\n\t\t<div className=\"wrap\">\n\t\t\t<div className=\"wrap__top\">\n\t\t\t\t<MainTitle title={personalProps.title} description={personalProps.description}/>\n\t\t\t\t<Button className=\"button\" variant=\"primary\" onClick={() => setModalCreateShow(true)}>\n\t\t\t\t\t<ButtonCreate />\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<hr/>\n\t\t\t<div className=\"wrap__content\">\n\t\t\t\t<form className=\"personal-form\">\n\t\t\t\t\t<div className=\"personal-form__row\">\n\n\t\t\t\t\t\t{personalFormFields.map((field) => (\n\t\t\t\t\t\t\t<div className=\"personal-form__el\">\n\t\t\t\t\t\t\t\t<div className=\"personal-form__item\">\n\t\t\t\t\t\t\t\t\t<label className=\"personal-form__item-title\" htmlFor={field.id}>{field.label}</label>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tclassName={`personal-form__item-input ${errorClass(isValid[field.valid])}`}\n\t\t\t\t\t\t\t\t\t\ttype={field.type}\n\t\t\t\t\t\t\t\t\t\tid={field.id}\n\t\t\t\t\t\t\t\t\t\tname={field.id}\n\t\t\t\t\t\t\t\t\t\tplaceholder={field.placeholder}\n\t\t\t\t\t\t\t\t\t\tvalue={personalForm[field.id]}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleChange(e, field.id)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t{/*<div className=\"personal-form__el\">*/}\n\t\t\t\t\t\t{/*\t<div className=\"personal-form__item\">*/}\n\t\t\t\t\t\t{/*\t\t<label className=\"personal-form__item-title\" htmlFor=\"firstName\">First name</label>*/}\n\t\t\t\t\t\t{/*\t\t<input*/}\n\t\t\t\t\t\t{/*\t\t\t className={`personal-form__item-input ${errorClass(isValid.firstNameValid)}`}*/}\n\t\t\t\t\t\t{/*\t\t\t type=\"text\"*/}\n\t\t\t\t\t\t{/*\t\t\t id=\"firstName\"*/}\n\t\t\t\t\t\t{/*\t\t\t name=\"firstName\"*/}\n\t\t\t\t\t\t{/*\t\t\t placeholder=\"Enter your first name\"*/}\n\t\t\t\t\t\t{/*\t\t\t value={personalForm.firstName}*/}\n\t\t\t\t\t\t{/*\t\t\t onChange={(e) => handleChange(e, \"firstName\")}*/}\n\t\t\t\t\t\t{/*\t\t/>*/}\n\t\t\t\t\t\t{/*\t</div>*/}\n\t\t\t\t\t\t{/*</div>*/}\n\t\t\t\t\t\t{/*<div className=\"personal-form__el\">*/}\n\t\t\t\t\t\t{/*\t<div className=\"personal-form__item\">*/}\n\t\t\t\t\t\t{/*\t\t<label className=\"personal-form__item-title\" htmlFor=\"lastName\">Last name</label>*/}\n\t\t\t\t\t\t{/*\t\t<input*/}\n\t\t\t\t\t\t{/*\t\t\t className={`personal-form__item-input ${errorClass(isValid.lastNameValid)}`}*/}\n\t\t\t\t\t\t{/*\t\t\t type=\"text\"*/}\n\t\t\t\t\t\t{/*\t\t\t id=\"lastName\"*/}\n\t\t\t\t\t\t{/*\t\t\t name=\"lastName\"*/}\n\t\t\t\t\t\t{/*\t\t\t placeholder=\"Enter your last name\"*/}\n\t\t\t\t\t\t{/*\t\t\t value={personalForm.lastName}*/}\n\t\t\t\t\t\t{/*\t\t\t onChange={(e) => handleChange(e, \"lastName\")}*/}\n\t\t\t\t\t\t{/*\t\t/>*/}\n\t\t\t\t\t\t{/*\t</div>*/}\n\t\t\t\t\t\t{/*</div>*/}\n\t\t\t\t\t\t{/*<div className=\"personal-form__el\">*/}\n\t\t\t\t\t\t{/*\t<div className=\"personal-form__item\">*/}\n\t\t\t\t\t\t{/*\t\t<label className=\"personal-form__item-title\" htmlFor=\"company\">Company name</label>*/}\n\t\t\t\t\t\t{/*\t\t<input*/}\n\t\t\t\t\t\t{/*\t\t\t className={`personal-form__item-input ${errorClass(isValid.companyValid)}`}*/}\n\t\t\t\t\t\t{/*\t\t\t type=\"text\"*/}\n\t\t\t\t\t\t{/*\t\t\t id=\"company\"*/}\n\t\t\t\t\t\t{/*\t\t\t name=\"company\"*/}\n\t\t\t\t\t\t{/*\t\t\t placeholder=\"Enter your company name\"*/}\n\t\t\t\t\t\t{/*\t\t\t value={personalForm.company}*/}\n\t\t\t\t\t\t{/*\t\t\t onChange={(e) => handleChange(e, \"company\")}*/}\n\t\t\t\t\t\t{/*\t\t/>*/}\n\t\t\t\t\t\t{/*\t</div>*/}\n\t\t\t\t\t\t{/*</div>*/}\n\t\t\t\t\t\t{/*<div className=\"personal-form__el\">*/}\n\t\t\t\t\t\t{/*\t<div className=\"personal-form__item\">*/}\n\t\t\t\t\t\t{/*\t\t<label className=\"personal-form__item-title\" htmlFor=\"productCategory\">Product Category</label>*/}\n\t\t\t\t\t\t{/*\t\t<input*/}\n\t\t\t\t\t\t{/*\t\t\t className={`personal-form__item-input ${errorClass(isValid.productCategoryValid)}`}*/}\n\t\t\t\t\t\t{/*\t\t\t type=\"text\"*/}\n\t\t\t\t\t\t{/*\t\t\t id=\"productCategory\"*/}\n\t\t\t\t\t\t{/*\t\t\t name=\"productCategory\"*/}\n\t\t\t\t\t\t{/*\t\t\t placeholder=\"Enter product category\"*/}\n\t\t\t\t\t\t{/*\t\t\t value={personalForm.productCategory}*/}\n\t\t\t\t\t\t{/*\t\t\t onChange={(e) => handleChange(e, \"productCategory\")}*/}\n\t\t\t\t\t\t{/*\t\t/>*/}\n\t\t\t\t\t\t{/*\t</div>*/}\n\t\t\t\t\t\t{/*</div>*/}\n\t\t\t\t\t\t{/*<div className=\"personal-form__el\">*/}\n\t\t\t\t\t\t{/*\t<div className=\"personal-form__item\">*/}\n\t\t\t\t\t\t{/*\t\t<label className=\"personal-form__item-title\" htmlFor=\"address\">Address</label>*/}\n\t\t\t\t\t\t{/*\t\t<input*/}\n\t\t\t\t\t\t{/*\t\t\t className={`personal-form__item-input ${errorClass(isValid.addressValid)}`}*/}\n\t\t\t\t\t\t{/*\t\t\t type=\"text\"*/}\n\t\t\t\t\t\t{/*\t\t\t id=\"address\"*/}\n\t\t\t\t\t\t{/*\t\t\t name=\"address\"*/}\n\t\t\t\t\t\t{/*\t\t\t placeholder=\"Enter your address\"*/}\n\t\t\t\t\t\t{/*\t\t\t value={personalForm.address}*/}\n\t\t\t\t\t\t{/*\t\t\t onChange={(e) => handleChange(e, \"address\")}*/}\n\t\t\t\t\t\t{/*\t\t/>*/}\n\t\t\t\t\t\t{/*\t</div>*/}\n\t\t\t\t\t\t{/*</div>*/}\n\t\t\t\t\t\t{/*<div className=\"personal-form__el\">*/}\n\t\t\t\t\t\t{/*\t<div className=\"personal-form__item\">*/}\n\t\t\t\t\t\t{/*\t\t<label className=\"personal-form__item-title\" htmlFor=\"oldPassword\">Enter old password</label>*/}\n\t\t\t\t\t\t{/*\t\t<input*/}\n\t\t\t\t\t\t{/*\t\t\t className={`personal-form__item-input ${errorClass(isValid.oldPasswordValid)}`}*/}\n\t\t\t\t\t\t{/*\t\t\t type=\"password\"*/}\n\t\t\t\t\t\t{/*\t\t\t id=\"oldPassword\"*/}\n\t\t\t\t\t\t{/*\t\t\t name=\"oldPassword\"*/}\n\t\t\t\t\t\t{/*\t\t\t placeholder=\"Enter password\"*/}\n\t\t\t\t\t\t{/*\t\t\t value={newPassword.oldPassword}*/}\n\t\t\t\t\t\t{/*\t\t\t onChange={(e) => handleChangePassword(e, \"oldPassword\")}*/}\n\t\t\t\t\t\t{/*\t\t/>*/}\n\t\t\t\t\t\t{/*\t</div>*/}\n\t\t\t\t\t\t{/*</div>*/}\n\t\t\t\t\t\t{/*<div className=\"personal-form__el\">*/}\n\t\t\t\t\t\t{/*\t<div className=\"personal-form__item\">*/}\n\t\t\t\t\t\t{/*\t\t<label className=\"personal-form__item-title\" htmlFor=\"newPassword\">Enter a new password</label>*/}\n\t\t\t\t\t\t{/*\t\t<input*/}\n\t\t\t\t\t\t{/*\t\t\t className={`personal-form__item-input ${errorClass(isValid.newPasswordValid)}`}*/}\n\t\t\t\t\t\t{/*\t\t\t type=\"password\"*/}\n\t\t\t\t\t\t{/*\t\t\t id=\"newPassword\"*/}\n\t\t\t\t\t\t{/*\t\t\t name=\"newPassword\"*/}\n\t\t\t\t\t\t{/*\t\t\t placeholder=\"Enter your new password\"*/}\n\t\t\t\t\t\t{/*\t\t\t value={newPassword.newPassword}*/}\n\t\t\t\t\t\t{/*\t\t\t onChange={(e) => handleChangePassword(e, \"newPassword\")}*/}\n\t\t\t\t\t\t{/*\t\t/>*/}\n\t\t\t\t\t\t{/*\t</div>*/}\n\t\t\t\t\t\t{/*</div>*/}\n\t\t\t\t\t</div>\n\t\t\t\t\t<Button className=\"button\" variant=\"primary\" onClick={(e) => {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tif(personalForm.password === newPassword.oldPassword\n\t\t\t\t\t\t\t&& newPassword.oldPassword !== newPassword.newPassword) {\n\t\t\t\t\t\t\tpersonalForm.password = newPassword.newPassword\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst newUsers = getUsers.map((user) => {\n\t\t\t\t\t\t\tif(user.email === getUser.email) {\n\t\t\t\t\t\t\t\tuser = {...personalForm}\n\t\t\t\t\t\t\t\treturn user\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn user\n\t\t\t\t\t\t})\n\t\t\t\t\t\tlet values = Object.values((isValid));\n\t\t\t\t\t\tif(values.includes(false) || values.includes('')) {\n\t\t\t\t\t\t\talert('Неверно введена информация')\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetGetUsers(newUsers)\n\t\t\t\t\t\t\tlocalStorage.setItem('users', JSON.stringify(newUsers))\n\t\t\t\t\t\t\tsetNewPassword({oldPassword: '', newPassword: ''})\n\t\t\t\t\t\t}\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<div className=\"personal-form__button\">\n\t\t\t\t\t\t\t<span className=\"personal-form__button-text\">Save changes</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Button>\n\n\t\t\t\t</form>\n\t\t\t\t{modalCreateShow && (\n\t\t\t\t\t<MyCreateModal\n\t\t\t\t\t\tinfo={modalCreate}\n\t\t\t\t\t\tshow={modalCreateShow}\n\t\t\t\t\t\tonHide={() => setModalCreateShow(false)}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Personal;"]},"metadata":{},"sourceType":"module"}