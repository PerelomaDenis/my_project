{"ast":null,"code":"var _jsxFileName = \"/home/justiceitspc-1/react_app/my-app/src/components/Charts/ChartBar/ChartBar.jsx\";\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { Chart, BarSeries, Title, ArgumentAxis, ValueAxis } from '@devexpress/dx-react-chart-material-ui';\nimport { Animation } from '@devexpress/dx-react-chart';\nimport './ChartBar.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChartBar = () => {\n  const getSellProd = JSON.parse(localStorage.getItem('sellProducts'));\n\n  const getTotalPrice = day => {\n    let total = 0;\n    getSellProd.reduce((prev, current) => {\n      if (current.saleDate === day) {\n        total = prev + +current.price * +current.sellQuantity;\n        return total;\n      }\n\n      total = prev;\n      return total;\n    }, 0);\n    return total;\n  };\n\n  const getMonTotal = getTotalPrice('Mon');\n  const getTueTotal = getTotalPrice('Tue');\n  const getWedTotal = getTotalPrice('Wed');\n  const getThuTotal = getTotalPrice('Thu');\n  const getFriTotal = getTotalPrice('Fri');\n  const getSatTotal = getTotalPrice('Sat');\n  const getSunTotal = getTotalPrice('Sun');\n  const data = [{\n    day: 'Mon',\n    population: getMonTotal\n  }, {\n    day: 'Tue',\n    population: getTueTotal\n  }, {\n    day: 'Wed',\n    population: getWedTotal\n  }, {\n    day: 'Thu',\n    population: getThuTotal\n  }, {\n    day: 'Fri',\n    population: getFriTotal\n  }, {\n    day: 'Sat',\n    population: getSatTotal\n  }, {\n    day: 'Sun',\n    population: getSunTotal\n  }];\n  console.log('========>getMonTotal', getMonTotal);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      data: data,\n      height: \"400\",\n      children: [/*#__PURE__*/_jsxDEV(ArgumentAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ValueAxis, {\n        max: 1000\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(BarSeries, {\n        valueField: \"price\",\n        argumentField: \"saleDate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Animation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }, this);\n};\n\n_c = ChartBar;\nexport default ChartBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartBar\");","map":{"version":3,"sources":["/home/justiceitspc-1/react_app/my-app/src/components/Charts/ChartBar/ChartBar.jsx"],"names":["React","Paper","Chart","BarSeries","Title","ArgumentAxis","ValueAxis","Animation","ChartBar","getSellProd","JSON","parse","localStorage","getItem","getTotalPrice","day","total","reduce","prev","current","saleDate","price","sellQuantity","getMonTotal","getTueTotal","getWedTotal","getThuTotal","getFriTotal","getSatTotal","getSunTotal","data","population","console","log"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SACCC,KADD,EAECC,SAFD,EAGCC,KAHD,EAICC,YAJD,EAKCC,SALD,QAMO,wCANP;AAOA,SAASC,SAAT,QAA0B,4BAA1B;AACA,OAAO,iBAAP;;;AAIA,MAAMC,QAAQ,GAAG,MAAM;AACtB,QAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CAApB;;AAEA,QAAMC,aAAa,GAAIC,GAAD,IAAS;AAC9B,QAAIC,KAAK,GAAG,CAAZ;AACAP,IAAAA,WAAW,CAACQ,MAAZ,CAAmB,CAACC,IAAD,EAAOC,OAAP,KAAmB;AACrC,UAAGA,OAAO,CAACC,QAAR,KAAqBL,GAAxB,EAA6B;AAC5BC,QAAAA,KAAK,GAAGE,IAAI,GAAG,CAACC,OAAO,CAACE,KAAT,GAAiB,CAACF,OAAO,CAACG,YAAzC;AACA,eAAON,KAAP;AACA;;AACDA,MAAAA,KAAK,GAAGE,IAAR;AACA,aAAOF,KAAP;AACA,KAPD,EAOG,CAPH;AAQA,WAAOA,KAAP;AACA,GAXD;;AAaA,QAAMO,WAAW,GAAGT,aAAa,CAAC,KAAD,CAAjC;AACA,QAAMU,WAAW,GAAGV,aAAa,CAAC,KAAD,CAAjC;AACA,QAAMW,WAAW,GAAGX,aAAa,CAAC,KAAD,CAAjC;AACA,QAAMY,WAAW,GAAGZ,aAAa,CAAC,KAAD,CAAjC;AACA,QAAMa,WAAW,GAAGb,aAAa,CAAC,KAAD,CAAjC;AACA,QAAMc,WAAW,GAAGd,aAAa,CAAC,KAAD,CAAjC;AACA,QAAMe,WAAW,GAAGf,aAAa,CAAC,KAAD,CAAjC;AAGA,QAAMgB,IAAI,GAAG,CACZ;AAAEf,IAAAA,GAAG,EAAE,KAAP;AAAcgB,IAAAA,UAAU,EAAER;AAA1B,GADY,EAEZ;AAAER,IAAAA,GAAG,EAAE,KAAP;AAAcgB,IAAAA,UAAU,EAAEP;AAA1B,GAFY,EAGZ;AAAET,IAAAA,GAAG,EAAE,KAAP;AAAcgB,IAAAA,UAAU,EAAEN;AAA1B,GAHY,EAIZ;AAAEV,IAAAA,GAAG,EAAE,KAAP;AAAcgB,IAAAA,UAAU,EAAEL;AAA1B,GAJY,EAKZ;AAAEX,IAAAA,GAAG,EAAE,KAAP;AAAcgB,IAAAA,UAAU,EAAEJ;AAA1B,GALY,EAMZ;AAAEZ,IAAAA,GAAG,EAAE,KAAP;AAAcgB,IAAAA,UAAU,EAAEH;AAA1B,GANY,EAOZ;AAAEb,IAAAA,GAAG,EAAE,KAAP;AAAcgB,IAAAA,UAAU,EAAEF;AAA1B,GAPY,CAAb;AASAG,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCV,WAApC;AAGA,sBACC,QAAC,KAAD;AAAA,2BACC,QAAC,KAAD;AACC,MAAA,IAAI,EAAEO,IADP;AAEC,MAAA,MAAM,EAAC,KAFR;AAAA,8BAIC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAJD,eAKC,QAAC,SAAD;AAAW,QAAA,GAAG,EAAE;AAAhB;AAAA;AAAA;AAAA;AAAA,cALD,eAOC,QAAC,SAAD;AACC,QAAA,UAAU,EAAC,OADZ;AAEC,QAAA,aAAa,EAAC;AAFf;AAAA;AAAA;AAAA;AAAA,cAPD,eAWC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAXD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAiBA,CAtDD;;KAAMtB,Q;AAwDN,eAAeA,QAAf","sourcesContent":["import * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport {\n\tChart,\n\tBarSeries,\n\tTitle,\n\tArgumentAxis,\n\tValueAxis,\n} from '@devexpress/dx-react-chart-material-ui';\nimport { Animation } from '@devexpress/dx-react-chart';\nimport './ChartBar.scss';\n\n\n\nconst ChartBar = () => {\n\tconst getSellProd = JSON.parse(localStorage.getItem('sellProducts'))\n\n\tconst getTotalPrice = (day) => {\n\t\tlet total = 0;\n\t\tgetSellProd.reduce((prev, current) => {\n\t\t\tif(current.saleDate === day) {\n\t\t\t\ttotal = prev + +current.price * +current.sellQuantity\n\t\t\t\treturn total\n\t\t\t}\n\t\t\ttotal = prev\n\t\t\treturn total\n\t\t}, 0)\n\t\treturn total\n\t}\n\n\tconst getMonTotal = getTotalPrice('Mon');\n\tconst getTueTotal = getTotalPrice('Tue');\n\tconst getWedTotal = getTotalPrice('Wed');\n\tconst getThuTotal = getTotalPrice('Thu');\n\tconst getFriTotal = getTotalPrice('Fri');\n\tconst getSatTotal = getTotalPrice('Sat');\n\tconst getSunTotal = getTotalPrice('Sun');\n\n\n\tconst data = [\n\t\t{ day: 'Mon', population: getMonTotal },\n\t\t{ day: 'Tue', population: getTueTotal },\n\t\t{ day: 'Wed', population: getWedTotal },\n\t\t{ day: 'Thu', population: getThuTotal },\n\t\t{ day: 'Fri', population: getFriTotal },\n\t\t{ day: 'Sat', population: getSatTotal },\n\t\t{ day: 'Sun', population: getSunTotal },\n\t];\n\tconsole.log('========>getMonTotal', getMonTotal);\n\t\n\n\treturn (\n\t\t<Paper>\n\t\t\t<Chart\n\t\t\t\tdata={data}\n\t\t\t\theight=\"400\"\n\t\t\t>\n\t\t\t\t<ArgumentAxis />\n\t\t\t\t<ValueAxis max={1000} />\n\n\t\t\t\t<BarSeries\n\t\t\t\t\tvalueField=\"price\"\n\t\t\t\t\targumentField=\"saleDate\"\n\t\t\t\t/>\n\t\t\t\t<Animation />\n\t\t\t</Chart>\n\t\t</Paper>\n\t)\n}\n\nexport default ChartBar;\n\n"]},"metadata":{},"sourceType":"module"}