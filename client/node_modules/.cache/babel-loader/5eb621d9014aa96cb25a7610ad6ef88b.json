{"ast":null,"code":"import { ajaxWrapper } from \"../../helpers/ajaxWrapper\";\nimport { urls } from \"../../helpers/constant\";\nexport const login = data => {\n  const url = `${urls.AUTH}/login`;\n  console.log('========>url', url);\n  return ajaxWrapper({\n    method: 'POST',\n    url,\n    data\n  }).then(data => data.data);\n};\nexport const registration = data => {\n  const url = `${urls.AUTH}/register`;\n  return ajaxWrapper({\n    method: 'POST',\n    url,\n    data\n  });\n};\nexport const getAll = data => {\n  const url = `${urls.PRODUCTS}`;\n  return ajaxWrapper({\n    method: 'GET',\n    url,\n    data\n  }).then(data => data.data);\n};\nexport const getById = id => {\n  const url = `${urls.PRODUCTS}/${id}`;\n  return ajaxWrapper({\n    method: 'GET',\n    url\n  }).then(data => data.data);\n};\nexport const updateProduct = (id, data) => {\n  const url = `${urls.PRODUCTS}/${id}`;\n  return ajaxWrapper({\n    method: 'PATCH',\n    url,\n    data\n  }).then(data => data.data);\n};\nexport const createProduct = data => {\n  const url = `${urls.PRODUCTS}`;\n  return ajaxWrapper({\n    method: 'POST',\n    url,\n    data\n  }).then(data => data.data);\n};\nexport const getOneUser = data => {\n  const url = `${urls.USER}`;\n  return ajaxWrapper({\n    method: 'GET',\n    url,\n    data\n  }).then(data => data.data);\n};\nexport const updateOneUser = (id, data) => {\n  const url = `${urls.USER}/${id}`;\n  console.log('========>url', url);\n  return ajaxWrapper({\n    method: 'PATCH',\n    url,\n    data\n  });\n};","map":{"version":3,"sources":["/home/justiceitspc-1/react_app/my-app/client/src/services/ajaxUser/index.js"],"names":["ajaxWrapper","urls","login","data","url","AUTH","console","log","method","then","registration","getAll","PRODUCTS","getById","id","updateProduct","createProduct","getOneUser","USER","updateOneUser"],"mappings":"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","sourcesContent":["import {ajaxWrapper} from \"../../helpers/ajaxWrapper\";\nimport {urls} from \"../../helpers/constant\";\n\nexport const login = (data) => {\n\tconst url = `${urls.AUTH}/login`;\n\tconsole.log('========>url', url);\n\treturn ajaxWrapper({\n\t\tmethod: 'POST',\n\t\turl,\n\t\tdata,\n\t}).then(data => data.data)\n};\n\nexport const registration = (data) => {\n\tconst url = `${urls.AUTH}/register`;\n\treturn ajaxWrapper({\n\t\tmethod: 'POST',\n\t\turl,\n\t\tdata,\n\t});\n};\n\nexport const getAll = (data) => {\n\tconst url = `${urls.PRODUCTS}`;\n\treturn ajaxWrapper({\n\t\tmethod: 'GET',\n\t\turl,\n\t\tdata,\n\t}).then(data => data.data)\n};\n\nexport const getById = (id) => {\n\tconst url = `${urls.PRODUCTS}/${id}`;\n\treturn ajaxWrapper({\n\t\tmethod: 'GET',\n\t\turl,\n\t}).then(data => data.data)\n};\n\nexport const updateProduct = (id, data) => {\n\tconst url = `${urls.PRODUCTS}/${id}`;\n\treturn ajaxWrapper({\n\t\tmethod: 'PATCH',\n\t\turl,\n\t\tdata\n\t}).then(data => data.data)\n};\n\nexport const createProduct = (data) => {\n\tconst url = `${urls.PRODUCTS}`;\n\treturn ajaxWrapper({\n\t\tmethod: 'POST',\n\t\turl,\n\t\tdata\n\t}).then(data => data.data)\n};\n\nexport const getOneUser = (data) => {\n\tconst url = `${urls.USER}`;\n\treturn ajaxWrapper({\n\t\tmethod: 'GET',\n\t\turl,\n\t\tdata,\n\t}).then(data => data.data)\n};\n\nexport const updateOneUser = (id, data) => {\n\tconst url = `${urls.USER}/${id}`;\n\tconsole.log('========>url', url);\n\treturn ajaxWrapper({\n\t\tmethod: 'PATCH',\n\t\turl,\n\t\tdata\n\t})\n};"]},"metadata":{},"sourceType":"module"}