{"ast":null,"code":"var _jsxFileName = \"/home/justiceitspc-1/react_app/my-app/client/src/components/Login/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Login.scss';\nimport { validateField } from \"../../services/valid\";\nimport { loginFormFields } from \"../../services/mock\";\nimport { login } from \"../../services/ajaxUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  changeIsLoin,\n  changeUserId\n}) => {\n  _s();\n\n  const [isFormValid, setFormIsValid] = useState(true);\n  const [isValid, setIsValid] = useState({\n    emailValid: '',\n    passwordValid: ''\n  });\n  const [getUsers, setGetUsers] = useState(JSON.parse(localStorage.getItem('users')));\n  const [loginForm, setLoginForm] = useState({});\n  const [isLogin, setIsLogin] = useState(JSON.parse(localStorage.getItem('isLogin')));\n  const [isToken, setIsToken] = useState(JSON.parse(localStorage.getItem('token'))); // const isToken = localStorage.getItem('token');\n\n  const handleChange = (e, type) => {\n    const {\n      value\n    } = e.target;\n    setLoginForm(prevForm => ({ ...prevForm,\n      [type]: value\n    }));\n    validateField(type, value, isValid, setIsValid, loginForm);\n  };\n\n  const getApiCall = useCallback(data => {\n    login(data).then(response => {\n      console.log(typeof response.token);\n      localStorage.setItem('token', response.token);\n    });\n  }, []);\n\n  const handleLoginClick = e => {\n    getApiCall(loginForm); // let isEmail = false;\n    // let isPassword = false;\n    // let userId;\n    //\n    // for (let i = 0; i < getUsers.length; i++) {\n    // \tfor (let key in getUsers[i]) {\n    // \t\tif (key === 'email') {\n    // \t\t\tif (getUsers[i][key] === loginForm.email) {\n    // \t\t\t\tisEmail = true;\n    // \t\t\t\tuserId = getUsers[i]['id'];\n    // \t\t\t}\n    // \t\t}\n    //\n    // \t\tif (key === 'password') {\n    // \t\t\tif (getUsers[i][key] === loginForm.password) {\n    // \t\t\t\tisPassword = true;\n    // \t\t\t}\n    // \t\t}\n    // \t}\n    // }\n    //\n    // if (isPassword && isEmail) {\n    // \tlet values = Object.values((isValid));\n    // \tif (values.includes(false) || values.includes('')) {\n    // \t\tsetFormIsValid(false)\n    // \t} else {\n    // \t\tsetFormIsValid(true)\n    // \t\tsetIsLogin(true);\n    // \t\tlocalStorage.setItem('isLogin', JSON.stringify(true));\n    // \t\tchangeIsLoin(true);\n    // \t\tchangeUserId(userId);\n    // \t\tlocalStorage.setItem('userId', JSON.stringify(userId));\n    // \t}\n    // } else {\n    // \tsetFormIsValid(false)\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wraps\",\n    children: [isLogin && /*#__PURE__*/_jsxDEV(Redirect, {\n      to: '/'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"register-form\",\n        children: [loginFormFields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-form__row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"register-form__el\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"register-form__item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"register-form__item-title\",\n                htmlFor: field.id,\n                children: field.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"register-form__item-input\",\n                type: field.type,\n                id: field.id,\n                name: field.id,\n                placeholder: field.placeholder,\n                value: loginForm[field.id],\n                onChange: e => handleChange(e, field.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }, this)), !isFormValid && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error__text\",\n          children: \"Email or password entered wrong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"register-form__btn\",\n          onClick: () => handleLoginClick(),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"register-form__button\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"register-form__btn-text\",\n              children: \"Log in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrap-left__question\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          className: \"wrap-left__question-link\",\n          to: \"/register\",\n          children: \"Forgot password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap-right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Login, \"ySHL2mBLCU2sjOsbQrwmZ1g28Wc=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/justiceitspc-1/react_app/my-app/client/src/components/Login/Login.jsx"],"names":["React","useCallback","useState","Button","NavLink","Redirect","validateField","loginFormFields","login","Login","changeIsLoin","changeUserId","isFormValid","setFormIsValid","isValid","setIsValid","emailValid","passwordValid","getUsers","setGetUsers","JSON","parse","localStorage","getItem","loginForm","setLoginForm","isLogin","setIsLogin","isToken","setIsToken","handleChange","e","type","value","target","prevForm","getApiCall","data","then","response","console","log","token","setItem","handleLoginClick","map","field","id","label","placeholder"],"mappings":"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","sourcesContent":["import React, {useCallback, useState} from \"react\";\n\nimport {Button} from \"react-bootstrap\";\nimport {NavLink, Redirect} from \"react-router-dom\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Login.scss';\nimport {validateField} from \"../../services/valid\";\nimport {loginFormFields} from \"../../services/mock\";\nimport {login} from \"../../services/ajaxUser\";\n\n\nconst Login = ({changeIsLoin, changeUserId}) => {\n\tconst [isFormValid, setFormIsValid] = useState(true)\n\tconst [isValid, setIsValid] = useState({\n\t\temailValid: '',\n\t\tpasswordValid: '',\n\t})\n\tconst [getUsers, setGetUsers] = useState(JSON.parse(localStorage.getItem('users')))\n\tconst [loginForm, setLoginForm] = useState({});\n\tconst [isLogin, setIsLogin] = useState(JSON.parse(localStorage.getItem('isLogin')));\n\tconst [isToken, setIsToken] = useState(JSON.parse(localStorage.getItem('token')));\n\t// const isToken = localStorage.getItem('token');\n\n\tconst handleChange = (e, type) => {\n\t\tconst {value} = e.target\n\t\tsetLoginForm((prevForm) => ({\n\t\t\t...prevForm,\n\t\t\t[type]: value,\n\t\t}))\n\t\tvalidateField(type, value, isValid, setIsValid, loginForm)\n\t}\n\n\tconst getApiCall = useCallback((data) => {\n\t\tlogin(data)\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(typeof response.token)\n\t\t\t\tlocalStorage.setItem('token', response.token);\n\t\t\t})\n\t}, [])\n\n\tconst handleLoginClick = (e) => {\n\t\tgetApiCall(loginForm)\n\t\t// let isEmail = false;\n\t\t// let isPassword = false;\n\t\t// let userId;\n\t\t//\n\t\t// for (let i = 0; i < getUsers.length; i++) {\n\t\t// \tfor (let key in getUsers[i]) {\n\t\t// \t\tif (key === 'email') {\n\t\t// \t\t\tif (getUsers[i][key] === loginForm.email) {\n\t\t// \t\t\t\tisEmail = true;\n\t\t// \t\t\t\tuserId = getUsers[i]['id'];\n\t\t// \t\t\t}\n\t\t// \t\t}\n\t\t//\n\t\t// \t\tif (key === 'password') {\n\t\t// \t\t\tif (getUsers[i][key] === loginForm.password) {\n\t\t// \t\t\t\tisPassword = true;\n\t\t// \t\t\t}\n\t\t// \t\t}\n\t\t// \t}\n\t\t// }\n\t\t//\n\t\t// if (isPassword && isEmail) {\n\t\t// \tlet values = Object.values((isValid));\n\t\t// \tif (values.includes(false) || values.includes('')) {\n\t\t// \t\tsetFormIsValid(false)\n\t\t// \t} else {\n\t\t// \t\tsetFormIsValid(true)\n\t\t// \t\tsetIsLogin(true);\n\t\t// \t\tlocalStorage.setItem('isLogin', JSON.stringify(true));\n\t\t// \t\tchangeIsLoin(true);\n\t\t// \t\tchangeUserId(userId);\n\t\t// \t\tlocalStorage.setItem('userId', JSON.stringify(userId));\n\t\t// \t}\n\t\t// } else {\n\t\t// \tsetFormIsValid(false)\n\t\t// }\n\t}\n\n\treturn (\n\t\t<div className=\"wraps\">\n\t\t\t{isLogin && <Redirect to={'/'}/>}\n\t\t\t<div className=\"wrap-left\">\n\t\t\t\t<h1>Sign in</h1>\n\t\t\t\t<form className=\"register-form\">\n\t\t\t\t\t{loginFormFields.map((field) => (\n\t\t\t\t\t\t<div className=\"login-form__row\">\n\t\t\t\t\t\t\t<div className=\"register-form__el\">\n\t\t\t\t\t\t\t\t<div className=\"register-form__item\">\n\t\t\t\t\t\t\t\t\t<label className=\"register-form__item-title\" htmlFor={field.id}>{field.label}</label>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tclassName=\"register-form__item-input\"\n\t\t\t\t\t\t\t\t\t\ttype={field.type}\n\t\t\t\t\t\t\t\t\t\tid={field.id}\n\t\t\t\t\t\t\t\t\t\tname={field.id}\n\t\t\t\t\t\t\t\t\t\tplaceholder={field.placeholder}\n\t\t\t\t\t\t\t\t\t\tvalue={loginForm[field.id]}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleChange(e, field.id)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t\t{!isFormValid && (<div className=\"error__text\">Email or password entered wrong</div>)}\n\t\t\t\t\t<Button className=\"register-form__btn\" onClick={() => handleLoginClick()}>\n\t\t\t\t\t\t<div className=\"register-form__button\">\n\t\t\t\t\t\t\t<span className=\"register-form__btn-text\">Log in</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Button>\n\t\t\t\t</form>\n\t\t\t\t<div className=\"wrap-left__question\">\n\t\t\t\t\t<NavLink className=\"wrap-left__question-link\" to=\"/register\">Forgot password?</NavLink>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"wrap-right\">\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}