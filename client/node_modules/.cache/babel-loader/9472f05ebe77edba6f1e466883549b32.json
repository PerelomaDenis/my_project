{"ast":null,"code":"var _jsxFileName = \"/home/justiceitspc-1/react_app/my-app/src/components/Charts/ChartPie/ChartPie.jsx\";\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { Chart, ArgumentAxis, ValueAxis, LineSeries, Title } from '@devexpress/dx-react-chart-material-ui';\nimport { ArgumentScale, ValueScale, Animation } from '@devexpress/dx-react-chart';\nimport { scaleLog, scaleTime } from 'd3-scale';\nimport { bitcoin as data } from '../../../demo-data/data-vizualization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst modifyDomain = () => [100, 100000];\n\nconst superscript = '⁰¹²³⁴⁵⁶⁷⁸⁹';\n\nconst formatPower = d => `${d}`.split('').map(c => superscript[c]).join('');\n\nconst format = scale => scale.tickFormat(4, d => 10 + formatPower(Math.round(Math.log(d) / Math.LN10)));\n\nexport default class Demo extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data\n    };\n  }\n\n  render() {\n    const {\n      data: chartData\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        data: chartData,\n        children: [/*#__PURE__*/_jsxDEV(ArgumentScale, {\n          factory: scaleTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ValueScale, {\n          factory: scaleLog,\n          modifyDomain: modifyDomain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ArgumentAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ValueAxis, {\n          tickFormat: format\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(LineSeries, {\n          valueField: \"price\",\n          argumentField: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          text: \"Average USD market price across major bitcoin exchanges\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Animation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this);\n  }\n\n} //\n// const ChartPie = (props) => {\n// \tconst [data, setData] = React.useState(sales)\n// \treturn (\n// \t\t<Paper>\n// \t\t\t<Chart\n// \t\t\t\tdata={data}\n// \t\t\t>\n// \t\t\t\t<ArgumentScale factory={scaleTime} />\n// \t\t\t\t<ValueScale factory={scaleLog} modifyDomain={modifyDomain} />\n// \t\t\t\t<ArgumentAxis />\n// \t\t\t\t<ValueAxis tickFormat={format} />\n//\n// \t\t\t\t<LineSeries\n// \t\t\t\t\tvalueField=\"price\"\n// \t\t\t\t\targumentField=\"date\"\n// \t\t\t\t/>\n// \t\t\t\t<Title\n// \t\t\t\t\ttext=\"Average USD market price across major bitcoin exchanges\"\n// \t\t\t\t/>\n// \t\t\t\t<Animation />\n// \t\t\t</Chart>\n// \t\t</Paper>\n// \t)\n// }\n//\n// export default ChartPie;","map":{"version":3,"sources":["/home/justiceitspc-1/react_app/my-app/src/components/Charts/ChartPie/ChartPie.jsx"],"names":["React","Paper","Chart","ArgumentAxis","ValueAxis","LineSeries","Title","ArgumentScale","ValueScale","Animation","scaleLog","scaleTime","bitcoin","data","modifyDomain","superscript","formatPower","d","split","map","c","join","format","scale","tickFormat","Math","round","log","LN10","Demo","PureComponent","constructor","props","state","render","chartData"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SACCC,KADD,EAECC,YAFD,EAGCC,SAHD,EAICC,UAJD,EAKCC,KALD,QAMO,wCANP;AAOA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,QAAqD,4BAArD;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,UAApC;AAEA,SAASC,OAAO,IAAIC,IAApB,QAAgC,uCAAhC;;;AAEA,MAAMC,YAAY,GAAG,MAAM,CAAC,GAAD,EAAM,MAAN,CAA3B;;AAEA,MAAMC,WAAW,GAAG,YAApB;;AACA,MAAMC,WAAW,GAAGC,CAAC,IAAM,GAAEA,CAAE,EAAN,CAASC,KAAT,CAAe,EAAf,EAAmBC,GAAnB,CAAuBC,CAAC,IAAIL,WAAW,CAACK,CAAD,CAAvC,EAA4CC,IAA5C,CAAiD,EAAjD,CAAzB;;AACA,MAAMC,MAAM,GAAGC,KAAK,IAAIA,KAAK,CAACC,UAAN,CAAiB,CAAjB,EAAoBP,CAAC,IAAI,KAC9CD,WAAW,CAACS,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,GAAL,CAASV,CAAT,IAAcQ,IAAI,CAACG,IAA9B,CAAD,CADU,CAAxB;;AAGA,eAAe,MAAMC,IAAN,SAAmB7B,KAAK,CAAC8B,aAAzB,CAAuC;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACZpB,MAAAA;AADY,KAAb;AAGA;;AAEDqB,EAAAA,MAAM,GAAG;AACR,UAAM;AAAErB,MAAAA,IAAI,EAAEsB;AAAR,QAAsB,KAAKF,KAAjC;AAEA,wBACC,QAAC,KAAD;AAAA,6BACC,QAAC,KAAD;AACC,QAAA,IAAI,EAAEE,SADP;AAAA,gCAGC,QAAC,aAAD;AAAe,UAAA,OAAO,EAAExB;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAHD,eAIC,QAAC,UAAD;AAAY,UAAA,OAAO,EAAED,QAArB;AAA+B,UAAA,YAAY,EAAEI;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAJD,eAKC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBALD,eAMC,QAAC,SAAD;AAAW,UAAA,UAAU,EAAEQ;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAND,eAQC,QAAC,UAAD;AACC,UAAA,UAAU,EAAC,OADZ;AAEC,UAAA,aAAa,EAAC;AAFf;AAAA;AAAA;AAAA;AAAA,gBARD,eAYC,QAAC,KAAD;AACC,UAAA,IAAI,EAAC;AADN;AAAA;AAAA;AAAA;AAAA,gBAZD,eAeC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAfD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AAqBA;;AAjCoD,C,CAqCtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport {\n\tChart,\n\tArgumentAxis,\n\tValueAxis,\n\tLineSeries,\n\tTitle,\n} from '@devexpress/dx-react-chart-material-ui';\nimport { ArgumentScale, ValueScale, Animation } from '@devexpress/dx-react-chart';\nimport { scaleLog, scaleTime } from 'd3-scale';\n\nimport { bitcoin as data } from '../../../demo-data/data-vizualization';\n\nconst modifyDomain = () => [100, 100000];\n\nconst superscript = '⁰¹²³⁴⁵⁶⁷⁸⁹';\nconst formatPower = d => (`${d}`).split('').map(c => superscript[c]).join('');\nconst format = scale => scale.tickFormat(4, d => 10\n\t+ formatPower(Math.round(Math.log(d) / Math.LN10)));\n\nexport default class Demo extends React.PureComponent {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tdata,\n\t\t};\n\t}\n\n\trender() {\n\t\tconst { data: chartData } = this.state;\n\n\t\treturn (\n\t\t\t<Paper>\n\t\t\t\t<Chart\n\t\t\t\t\tdata={chartData}\n\t\t\t\t>\n\t\t\t\t\t<ArgumentScale factory={scaleTime} />\n\t\t\t\t\t<ValueScale factory={scaleLog} modifyDomain={modifyDomain} />\n\t\t\t\t\t<ArgumentAxis />\n\t\t\t\t\t<ValueAxis tickFormat={format} />\n\n\t\t\t\t\t<LineSeries\n\t\t\t\t\t\tvalueField=\"price\"\n\t\t\t\t\t\targumentField=\"date\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Title\n\t\t\t\t\t\ttext=\"Average USD market price across major bitcoin exchanges\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Animation />\n\t\t\t\t</Chart>\n\t\t\t</Paper>\n\t\t);\n\t}\n}\n\n\n//\n// const ChartPie = (props) => {\n// \tconst [data, setData] = React.useState(sales)\n// \treturn (\n// \t\t<Paper>\n// \t\t\t<Chart\n// \t\t\t\tdata={data}\n// \t\t\t>\n// \t\t\t\t<ArgumentScale factory={scaleTime} />\n// \t\t\t\t<ValueScale factory={scaleLog} modifyDomain={modifyDomain} />\n// \t\t\t\t<ArgumentAxis />\n// \t\t\t\t<ValueAxis tickFormat={format} />\n//\n// \t\t\t\t<LineSeries\n// \t\t\t\t\tvalueField=\"price\"\n// \t\t\t\t\targumentField=\"date\"\n// \t\t\t\t/>\n// \t\t\t\t<Title\n// \t\t\t\t\ttext=\"Average USD market price across major bitcoin exchanges\"\n// \t\t\t\t/>\n// \t\t\t\t<Animation />\n// \t\t\t</Chart>\n// \t\t</Paper>\n// \t)\n// }\n//\n// export default ChartPie;"]},"metadata":{},"sourceType":"module"}