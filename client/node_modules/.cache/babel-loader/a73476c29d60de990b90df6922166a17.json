{"ast":null,"code":"var _jsxFileName = \"/home/justiceitspc-1/react_app/my-app/client/src/components/Login/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Login.scss';\nimport { validateField } from \"../../services/valid\";\nimport { loginFormFields } from \"../../services/mock\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  changeIsLoin,\n  changeUserId\n}) => {\n  _s();\n\n  const [isFormValid, setFormIsValid] = useState(true);\n  const [isValid, setIsValid] = useState({\n    emailValid: '',\n    passwordValid: ''\n  });\n  const [getUsers, setGetUsers] = useState(JSON.parse(localStorage.getItem('users')));\n  const [loginForm, setLoginForm] = useState({});\n  const [isLogin, setIsLogin] = useState(JSON.parse(localStorage.getItem('isLogin')));\n\n  const handleChange = (e, type) => {\n    const {\n      value\n    } = e.target;\n    setLoginForm(prevForm => ({ ...prevForm,\n      [type]: value\n    }));\n    validateField(type, value, isValid, setIsValid, loginForm);\n  };\n\n  const handleLoginClick = e => {\n    let isEmail = false;\n    let isPassword = false;\n    let userId;\n\n    for (let i = 0; i < getUsers.length; i++) {\n      for (let key in getUsers[i]) {\n        if (key === 'email') {\n          if (getUsers[i][key] === loginForm.email) {\n            isEmail = true;\n            userId = getUsers[i]['id'];\n          }\n        }\n\n        if (key === 'password') {\n          if (getUsers[i][key] === loginForm.password) {\n            isPassword = true;\n          }\n        }\n      }\n    }\n\n    if (isPassword && isEmail) {\n      let values = Object.values(isValid);\n\n      if (values.includes(false) || values.includes('')) {\n        setFormIsValid(false);\n      } else {\n        setFormIsValid(true);\n        setIsLogin(true);\n        localStorage.setItem('isLogin', JSON.stringify(true));\n        changeIsLoin(true);\n        changeUserId(userId);\n        localStorage.setItem('userId', JSON.stringify(userId));\n      }\n    } else {\n      setFormIsValid(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wraps\",\n    children: [isLogin && /*#__PURE__*/_jsxDEV(Redirect, {\n      to: '/'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"register-form\",\n        children: [loginFormFields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-form__row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"register-form__el\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"register-form__item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"register-form__item-title\",\n                htmlFor: field.id,\n                children: field.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"register-form__item-input\",\n                type: field.type,\n                id: field.id,\n                name: field.id,\n                placeholder: field.placeholder,\n                value: loginForm[field.id],\n                onChange: e => handleChange(e, field.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }, this)), !isFormValid && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error__text\",\n          children: \"Email or password entered wrong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"register-form__btn\",\n          onClick: () => handleLoginClick(),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"register-form__button\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"register-form__btn-text\",\n              children: \"Log in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrap-left__question\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          className: \"wrap-left__question-link\",\n          to: \"/register\",\n          children: \"Forgot password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap-right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Login, \"P070OlLTZBF2ag259+tIJUN/r1A=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/justiceitspc-1/react_app/my-app/client/src/components/Login/Login.jsx"],"names":["React","useState","Button","NavLink","Redirect","validateField","loginFormFields","Login","changeIsLoin","changeUserId","isFormValid","setFormIsValid","isValid","setIsValid","emailValid","passwordValid","getUsers","setGetUsers","JSON","parse","localStorage","getItem","loginForm","setLoginForm","isLogin","setIsLogin","handleChange","e","type","value","target","prevForm","handleLoginClick","isEmail","isPassword","userId","i","length","key","email","password","values","Object","includes","setItem","stringify","map","field","id","label","placeholder"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,SAAQC,MAAR,QAAqB,iBAArB;AACA,SAAQC,OAAR,EAAiBC,QAAjB,QAAgC,kBAAhC;AAEA,OAAO,sCAAP;AACA,OAAO,cAAP;AACA,SAAQC,aAAR,QAA4B,sBAA5B;AACA,SAAQC,eAAR,QAA8B,qBAA9B;;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,YAAD;AAAeC,EAAAA;AAAf,CAAD,KAAkC;AAAA;;AAC/C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC;AACtCa,IAAAA,UAAU,EAAE,EAD0B;AAEtCC,IAAAA,aAAa,EAAE;AAFuB,GAAD,CAAtC;AAIA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAACiB,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAD,CAAxC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACuB,OAAD,EAAUC,UAAV,IAAwBxB,QAAQ,CAACiB,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAD,CAAtC;;AAEA,QAAMK,YAAY,GAAG,CAACC,CAAD,EAAIC,IAAJ,KAAa;AACjC,UAAM;AAACC,MAAAA;AAAD,QAAUF,CAAC,CAACG,MAAlB;AACAP,IAAAA,YAAY,CAAEQ,QAAD,KAAe,EAC3B,GAAGA,QADwB;AAE3B,OAACH,IAAD,GAAQC;AAFmB,KAAf,CAAD,CAAZ;AAIAxB,IAAAA,aAAa,CAACuB,IAAD,EAAOC,KAAP,EAAcjB,OAAd,EAAuBC,UAAvB,EAAmCS,SAAnC,CAAb;AACA,GAPD;;AASA,QAAMU,gBAAgB,GAAIL,CAAD,IAAO;AAC/B,QAAIM,OAAO,GAAG,KAAd;AACA,QAAIC,UAAU,GAAG,KAAjB;AACA,QAAIC,MAAJ;;AAEA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAGpB,QAAQ,CAACqB,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACtC,WAAI,IAAIE,GAAR,IAAetB,QAAQ,CAACoB,CAAD,CAAvB,EAA4B;AAC3B,YAAGE,GAAG,KAAK,OAAX,EAAoB;AACnB,cAAGtB,QAAQ,CAACoB,CAAD,CAAR,CAAYE,GAAZ,MAAqBhB,SAAS,CAACiB,KAAlC,EAAyC;AACxCN,YAAAA,OAAO,GAAG,IAAV;AACAE,YAAAA,MAAM,GAAGnB,QAAQ,CAACoB,CAAD,CAAR,CAAY,IAAZ,CAAT;AACA;AACD;;AAED,YAAGE,GAAG,KAAK,UAAX,EAAuB;AACtB,cAAGtB,QAAQ,CAACoB,CAAD,CAAR,CAAYE,GAAZ,MAAqBhB,SAAS,CAACkB,QAAlC,EAA4C;AAC3CN,YAAAA,UAAU,GAAG,IAAb;AACA;AACD;AACD;AACD;;AAED,QAAGA,UAAU,IAAID,OAAjB,EAA0B;AACzB,UAAIQ,MAAM,GAAGC,MAAM,CAACD,MAAP,CAAe7B,OAAf,CAAb;;AACA,UAAG6B,MAAM,CAACE,QAAP,CAAgB,KAAhB,KAA0BF,MAAM,CAACE,QAAP,CAAgB,EAAhB,CAA7B,EAAkD;AACjDhC,QAAAA,cAAc,CAAC,KAAD,CAAd;AACA,OAFD,MAEO;AACNA,QAAAA,cAAc,CAAC,IAAD,CAAd;AACAc,QAAAA,UAAU,CAAC,IAAD,CAAV;AACAL,QAAAA,YAAY,CAACwB,OAAb,CAAqB,SAArB,EAAgC1B,IAAI,CAAC2B,SAAL,CAAe,IAAf,CAAhC;AACArC,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACAC,QAAAA,YAAY,CAAC0B,MAAD,CAAZ;AACAf,QAAAA,YAAY,CAACwB,OAAb,CAAqB,QAArB,EAA+B1B,IAAI,CAAC2B,SAAL,CAAeV,MAAf,CAA/B;AACA;AACD,KAZD,MAYO;AACNxB,MAAAA,cAAc,CAAC,KAAD,CAAd;AACA;AAED,GAtCD;;AAwCA,sBACC;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,eACEa,OAAO,iBAAI,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,YADb,eAEC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA,mBACElB,eAAe,CAACwC,GAAhB,CAAqBC,KAAD,iBACpB;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACC;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA,mCACC;AAAK,cAAA,SAAS,EAAC,qBAAf;AAAA,sCACC;AAAO,gBAAA,SAAS,EAAC,2BAAjB;AAA6C,gBAAA,OAAO,EAAEA,KAAK,CAACC,EAA5D;AAAA,0BAAiED,KAAK,CAACE;AAAvE;AAAA;AAAA;AAAA;AAAA,sBADD,eAEC;AACC,gBAAA,SAAS,EAAC,2BADX;AAEC,gBAAA,IAAI,EAAEF,KAAK,CAACnB,IAFb;AAGC,gBAAA,EAAE,EAAEmB,KAAK,CAACC,EAHX;AAIC,gBAAA,IAAI,EAAED,KAAK,CAACC,EAJb;AAKC,gBAAA,WAAW,EAAED,KAAK,CAACG,WALpB;AAMC,gBAAA,KAAK,EAAE5B,SAAS,CAACyB,KAAK,CAACC,EAAP,CANjB;AAOC,gBAAA,QAAQ,EAAGrB,CAAD,IAAOD,YAAY,CAACC,CAAD,EAAIoB,KAAK,CAACC,EAAV;AAP9B;AAAA;AAAA;AAAA;AAAA,sBAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADA,CADF,EAoBE,CAACtC,WAAD,iBAAiB;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBnB,eAqBC,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,oBAAlB;AAAuC,UAAA,OAAO,EAAE,MAAMsB,gBAAgB,EAAtE;AAAA,iCACC;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,mCACC;AAAM,cAAA,SAAS,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBArBD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,eA6BC;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,+BACC,QAAC,OAAD;AAAS,UAAA,SAAS,EAAC,0BAAnB;AAA8C,UAAA,EAAE,EAAC,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cA7BD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAmCC;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAnCD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAwCA,CAnGD;;GAAMzB,K;;KAAAA,K;AAqGN,eAAeA,KAAf","sourcesContent":["import React, {useState} from \"react\";\n\nimport {Button} from \"react-bootstrap\";\nimport {NavLink, Redirect} from \"react-router-dom\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Login.scss';\nimport {validateField} from \"../../services/valid\";\nimport {loginFormFields} from \"../../services/mock\";\n\n\nconst Login = ({changeIsLoin, changeUserId}) => {\n\tconst [isFormValid, setFormIsValid] = useState(true)\n\tconst [isValid, setIsValid] = useState({\n\t\temailValid: '',\n\t\tpasswordValid: '',\n\t})\n\tconst [getUsers, setGetUsers] = useState(JSON.parse(localStorage.getItem('users')))\n\tconst [loginForm, setLoginForm] = useState({});\n\tconst [isLogin, setIsLogin] = useState(JSON.parse(localStorage.getItem('isLogin')));\n\n\tconst handleChange = (e, type) => {\n\t\tconst {value} = e.target\n\t\tsetLoginForm((prevForm) => ({\n\t\t\t...prevForm,\n\t\t\t[type]: value,\n\t\t}))\n\t\tvalidateField(type, value, isValid, setIsValid, loginForm)\n\t}\n\n\tconst handleLoginClick = (e) => {\n\t\tlet isEmail = false;\n\t\tlet isPassword = false;\n\t\tlet userId;\n\n\t\tfor(let i=0; i < getUsers.length; i++) {\n\t\t\tfor(let key in getUsers[i]) {\n\t\t\t\tif(key === 'email') {\n\t\t\t\t\tif(getUsers[i][key] === loginForm.email) {\n\t\t\t\t\t\tisEmail = true;\n\t\t\t\t\t\tuserId = getUsers[i]['id'];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(key === 'password') {\n\t\t\t\t\tif(getUsers[i][key] === loginForm.password) {\n\t\t\t\t\t\tisPassword = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(isPassword && isEmail) {\n\t\t\tlet values = Object.values((isValid));\n\t\t\tif(values.includes(false) || values.includes('')) {\n\t\t\t\tsetFormIsValid(false)\n\t\t\t} else {\n\t\t\t\tsetFormIsValid(true)\n\t\t\t\tsetIsLogin(true);\n\t\t\t\tlocalStorage.setItem('isLogin', JSON.stringify(true));\n\t\t\t\tchangeIsLoin(true);\n\t\t\t\tchangeUserId(userId);\n\t\t\t\tlocalStorage.setItem('userId', JSON.stringify(userId));\n\t\t\t}\n\t\t} else {\n\t\t\tsetFormIsValid(false)\n\t\t}\n\n\t}\n\n\treturn (\n\t\t<div className=\"wraps\">\n\t\t\t{isLogin && <Redirect to={'/'}/>}\n\t\t\t<div className=\"wrap-left\">\n\t\t\t\t<h1>Sign in</h1>\n\t\t\t\t<form className=\"register-form\">\n\t\t\t\t\t{loginFormFields.map((field) => (\n\t\t\t\t\t\t<div className=\"login-form__row\">\n\t\t\t\t\t\t\t<div className=\"register-form__el\">\n\t\t\t\t\t\t\t\t<div className=\"register-form__item\">\n\t\t\t\t\t\t\t\t\t<label className=\"register-form__item-title\" htmlFor={field.id}>{field.label}</label>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tclassName=\"register-form__item-input\"\n\t\t\t\t\t\t\t\t\t\ttype={field.type}\n\t\t\t\t\t\t\t\t\t\tid={field.id}\n\t\t\t\t\t\t\t\t\t\tname={field.id}\n\t\t\t\t\t\t\t\t\t\tplaceholder={field.placeholder}\n\t\t\t\t\t\t\t\t\t\tvalue={loginForm[field.id]}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleChange(e, field.id)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t\t{!isFormValid && (<div className=\"error__text\">Email or password entered wrong</div>)}\n\t\t\t\t\t<Button className=\"register-form__btn\" onClick={() => handleLoginClick()}>\n\t\t\t\t\t\t<div className=\"register-form__button\">\n\t\t\t\t\t\t\t<span className=\"register-form__btn-text\">Log in</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Button>\n\t\t\t\t</form>\n\t\t\t\t<div className=\"wrap-left__question\">\n\t\t\t\t\t<NavLink className=\"wrap-left__question-link\" to=\"/register\">Forgot password?</NavLink>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"wrap-right\">\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}