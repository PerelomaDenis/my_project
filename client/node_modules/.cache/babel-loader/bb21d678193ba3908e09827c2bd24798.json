{"ast":null,"code":"var _jsxFileName = \"/home/justiceitspc-1/react_app/my-app/client/src/components/MySellModal/MySellModal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from \"react\";\nimport { ReactSVG } from \"react-svg\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport './MySellModal.scss';\nimport { errorClass, validateField } from \"../../services/valid\";\nimport { addSaleProduct, removeProduct, updateProduct } from \"../../services/ajaxUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MySellModal = ({\n  info,\n  onHide,\n  show,\n  productId,\n  getProd,\n  setGetProd,\n  getProductsCall\n}) => {\n  _s();\n\n  const [isFormValid, setFormIsValid] = useState(true);\n  const [isValid, setIsValid] = useState({\n    saleDateValid: true,\n    sellQuantityValid: true\n  });\n  const newGetProd = getProd.filter(el => el._id === productId);\n  const [sellForm, setSellFrom] = useState(newGetProd[0]);\n  const [getSellProd, setGetSellProd] = useState([]);\n\n  const handleChange = (e, type) => {\n    const {\n      value\n    } = e.target;\n    setSellFrom(prevForm => ({ ...prevForm,\n      [type]: value\n    }));\n    validateField(type, value, isValid, setIsValid, sellForm);\n  };\n\n  const updateMyProduct = useCallback((id, data) => {\n    updateProduct(id, data).then(() => getProductsCall());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onHide: onHide,\n    show: show,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    className: \"modal-window\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"modal-form\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: info.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [info.inputs.map(input => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"modal__label\",\n            htmlFor: input.name,\n            children: input.placeholder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: input.name,\n            id: input.name,\n            type: input.type,\n            onChange: e => handleChange(e, input.name),\n            className: `modal__input ${errorClass(isValid[input.errorValid])}`,\n            placeholder: input.placeholder,\n            value: sellForm[input.name]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 8\n          }, this), errorClass(isValid[input.errorValid]) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-text\",\n            children: input.errorText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }, this)), !isFormValid && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error__text\",\n          children: \"The entered quantity of goods is higher than the stock balance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: \"modal__btn\",\n          onClick: e => {\n            e.preventDefault();\n            let values = Object.values(isValid);\n\n            if (values.includes(false) || values.includes('')) {} else {\n              setFormIsValid(true);\n              const dif = sellForm.quantity - sellForm.sellQuantity;\n\n              if (dif === 0) {\n                sellForm.quantity = dif;\n                setFormIsValid(true);\n                const newProds = getProd.filter(el => el._id !== productId);\n                setGetProd(newProds);\n                removeProduct(productId);\n                addSaleProduct(sellForm);\n                onHide();\n              }\n\n              if (dif < 0) {\n                setFormIsValid(false);\n              }\n\n              if (dif > 0) {\n                sellForm.quantity = dif;\n                addSaleProduct(sellForm);\n                updateMyProduct(sellForm._id, {\n                  quantity: sellForm.quantity\n                });\n                setFormIsValid(true);\n                const newChangedProd = getProd.map(prod => {\n                  if (prod._id === productId) {\n                    prod = { ...sellForm\n                    };\n                    return prod;\n                  }\n\n                  return prod;\n                });\n                onHide();\n                setGetProd(newChangedProd);\n              }\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"modal__btn-text\",\n            children: info.buttonText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(ReactSVG, {\n            className: \"modal__btn-icon\",\n            src: info.buttonIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this);\n};\n\n_s(MySellModal, \"1GbI73Fi/HwNSqZc3X+CN0B7YP0=\");\n\n_c = MySellModal;\nexport default MySellModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"MySellModal\");","map":{"version":3,"sources":["/home/justiceitspc-1/react_app/my-app/client/src/components/MySellModal/MySellModal.jsx"],"names":["React","useCallback","useState","ReactSVG","Button","Modal","errorClass","validateField","addSaleProduct","removeProduct","updateProduct","MySellModal","info","onHide","show","productId","getProd","setGetProd","getProductsCall","isFormValid","setFormIsValid","isValid","setIsValid","saleDateValid","sellQuantityValid","newGetProd","filter","el","_id","sellForm","setSellFrom","getSellProd","setGetSellProd","handleChange","e","type","value","target","prevForm","updateMyProduct","id","data","then","title","inputs","map","input","name","placeholder","errorValid","errorText","preventDefault","values","Object","includes","dif","quantity","sellQuantity","newProds","newChangedProd","prod","buttonText","buttonIcon"],"mappings":"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","sourcesContent":["import React, {useCallback, useState} from \"react\";\nimport {ReactSVG} from \"react-svg\";\nimport {Button, Modal} from \"react-bootstrap\";\n\nimport './MySellModal.scss';\nimport {errorClass, validateField} from \"../../services/valid\";\nimport {addSaleProduct, removeProduct, updateProduct} from \"../../services/ajaxUser\";\n\nconst MySellModal = (\n\t{\n\t\tinfo,\n\t\tonHide,\n\t\tshow,\n\t\tproductId,\n\t\tgetProd,\n\t\tsetGetProd,\n\t\tgetProductsCall\n\t}) => {\n\tconst [isFormValid, setFormIsValid] = useState(true)\n\tconst [isValid, setIsValid] = useState({\n\t\tsaleDateValid: true,\n\t\tsellQuantityValid: true\n\t})\n\n\tconst newGetProd = getProd.filter((el) => el._id === productId)\n\tconst [sellForm, setSellFrom] = useState(newGetProd[0]);\n\tconst [getSellProd, setGetSellProd] = useState([])\n\tconst handleChange = (e, type) => {\n\t\tconst {value} = e.target\n\t\tsetSellFrom((prevForm) => ({\n\t\t\t...prevForm,\n\t\t\t[type]: value,\n\t\t}))\n\t\tvalidateField(type, value, isValid, setIsValid, sellForm)\n\t}\n\n\tconst updateMyProduct = useCallback(\n\t\t(id, data) => {\n\t\t\tupdateProduct(id, data)\n\t\t\t\t.then(() => getProductsCall())\n\t\t}, [])\n\n\treturn (\n\t\t<Modal\n\t\t\tonHide={onHide}\n\t\t\tshow={show}\n\t\t\tsize=\"lg\"\n\t\t\taria-labelledby=\"contained-modal-title-vcenter\"\n\t\t\tcentered\n\t\t\tclassName=\"modal-window\"\n\t\t>\n\t\t\t<form className=\"modal-form\">\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title id=\"contained-modal-title-vcenter\">\n\t\t\t\t\t\t{info.title}\n\t\t\t\t\t</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t{info.inputs.map((input) => (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label className=\"modal__label\" htmlFor={input.name}>{input.placeholder}</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tname={input.name}\n\t\t\t\t\t\t\t\tid={input.name}\n\t\t\t\t\t\t\t\ttype={input.type}\n\t\t\t\t\t\t\t\tonChange={(e) => handleChange(e, input.name)}\n\t\t\t\t\t\t\t\tclassName={`modal__input ${errorClass(isValid[input.errorValid])}`}\n\t\t\t\t\t\t\t\tplaceholder={input.placeholder}\n\t\t\t\t\t\t\t\tvalue={sellForm[input.name]}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{errorClass(isValid[input.errorValid]) && (<div className=\"error-text\">{input.errorText}</div>)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t\t{!isFormValid && (<div className=\"error__text\">The entered quantity of goods is higher than the stock balance</div>)}\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button type=\"submit\" className=\"modal__btn\" onClick={(e) => {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tlet values = Object.values((isValid));\n\t\t\t\t\t\tif (values.includes(false) || values.includes('')) {\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetFormIsValid(true)\n\t\t\t\t\t\t\tconst dif = sellForm.quantity - sellForm.sellQuantity;\n\t\t\t\t\t\t\tif (dif === 0) {\n\t\t\t\t\t\t\t\tsellForm.quantity = dif;\n\t\t\t\t\t\t\t\tsetFormIsValid(true)\n\t\t\t\t\t\t\t\tconst newProds = getProd.filter(el => el._id !== productId)\n\t\t\t\t\t\t\t\tsetGetProd(newProds)\n\t\t\t\t\t\t\t\tremoveProduct(productId)\n\t\t\t\t\t\t\t\taddSaleProduct(sellForm)\n\t\t\t\t\t\t\t\tonHide()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (dif < 0) {\n\t\t\t\t\t\t\t\tsetFormIsValid(false)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(dif > 0){\n\t\t\t\t\t\t\t\tsellForm.quantity = dif;\n\t\t\t\t\t\t\t\taddSaleProduct(sellForm)\n\t\t\t\t\t\t\t\tupdateMyProduct(sellForm._id, {quantity: sellForm.quantity})\n\t\t\t\t\t\t\t\tsetFormIsValid(true)\n\t\t\t\t\t\t\t\tconst newChangedProd = getProd.map((prod) => {\n\t\t\t\t\t\t\t\t\tif (prod._id === productId) {\n\t\t\t\t\t\t\t\t\t\tprod = {...sellForm}\n\t\t\t\t\t\t\t\t\t\treturn prod\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn prod\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\tonHide()\n\t\t\t\t\t\t\t\tsetGetProd(newChangedProd)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<span className=\"modal__btn-text\">{info.buttonText}</span>\n\t\t\t\t\t\t<ReactSVG className=\"modal__btn-icon\" src={info.buttonIcon}/>\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</form>\n\t\t</Modal>\n\t)\n}\n\nexport default MySellModal;"]},"metadata":{},"sourceType":"module"}