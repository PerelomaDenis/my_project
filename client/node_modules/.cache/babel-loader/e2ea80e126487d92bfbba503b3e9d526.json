{"ast":null,"code":"var _jsxFileName = \"/home/justiceitspc-1/react_app/my-app/src/components/Personal/Personal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Offcanvas } from \"react-bootstrap\";\nimport MainTitle from \"../MainTitle\";\nimport ButtonCreate from \"../ButtonCreate\";\nimport MyCreateModal from \"../MyCreateModal\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Personal.scss';\nimport { modalCreate, personalFormFields, personalProps } from \"../../services/mock\";\nimport FormInput from \"../FormInput\";\nimport { errorClass, validateField } from \"../../services/valid\";\nimport { ReactSVG } from \"react-svg\";\nimport menu from \"../../assets/images/menu.svg\";\nimport Sidebar from \"../Sidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Personal = () => {\n  _s();\n\n  const userId = JSON.parse(localStorage.getItem('userId'));\n  const [isFormValid, setFormIsValid] = useState(true);\n  const [isValid, setIsValid] = useState({\n    productCategoryValid: true,\n    firstNameValid: true,\n    lastNameValid: true,\n    companyValid: true,\n    addressValid: true,\n    oldPasswordValid: true,\n    newPasswordValid: true\n  });\n  const [newPassword, setNewPassword] = useState({});\n  const [getUsers, setGetUsers] = useState(JSON.parse(localStorage.getItem('users')));\n  const [modalCreateShow, setModalCreateShow] = React.useState(false);\n  const getUser = getUsers.filter(user => user.id === userId)[0];\n  const [personalForm, setPersonalForm] = useState(getUser);\n  const [getProd, setGetProd] = useState(JSON.parse(localStorage.getItem('products')));\n  console.log('========>isValid', isValid);\n  console.log('========>isFormValid', isFormValid);\n\n  const handleChange = (e, type) => {\n    const {\n      value\n    } = e.target;\n    setPersonalForm(prevForm => ({ ...prevForm,\n      [type]: value\n    }));\n    validateField(type, value, isValid, setIsValid, personalForm);\n  };\n\n  const handleChangePassword = (e, type) => {\n    const {\n      value\n    } = e.target;\n    setNewPassword(prevForm => ({ ...prevForm,\n      [type]: value\n    }));\n    validateField(type, value, isValid, setIsValid, newPassword);\n  };\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = e => {\n    e.preventDefault();\n    setShow(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap__top\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrap__top-mobile\",\n        children: [/*#__PURE__*/_jsxDEV(ReactSVG, {\n          className: \"\",\n          src: menu,\n          onClick: handleShow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Offcanvas, {\n          show: show,\n          onHide: handleClose,\n          children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n            closeButton: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n            children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(MainTitle, {\n        title: personalProps.title,\n        description: personalProps.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"button\",\n        variant: \"primary\",\n        onClick: () => setModalCreateShow(true),\n        children: /*#__PURE__*/_jsxDEV(ButtonCreate, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"personal-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"personal-form__row\",\n          children: personalFormFields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"personal-form__el\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"personal-form__item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"personal-form__item-title\",\n                htmlFor: field.id,\n                children: field.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: `personal-form__item-input ${errorClass(isValid[field.valid])}`,\n                type: field.type,\n                id: field.id,\n                name: field.id,\n                placeholder: field.placeholder,\n                value: personalForm[field.id],\n                onChange: e => handleChange(e, field.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 9\n            }, this), errorClass(isValid[field.valid]) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error__text\",\n              children: field.errorText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 47\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 6\n        }, this), !isFormValid && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error__text\",\n          children: \"\\u041D\\u0435\\u0432\\u0435\\u0440\\u043D\\u043E \\u0432\\u0432\\u0435\\u0434\\u0435\\u043D\\u0430 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"button\",\n            variant: \"primary\",\n            onClick: e => {\n              e.preventDefault();\n\n              if (personalForm.password === newPassword.oldPassword && newPassword.oldPassword !== newPassword.newPassword) {\n                personalForm.password = newPassword.newPassword;\n              }\n\n              const newUsers = getUsers.map(user => {\n                if (user.email === getUser.email) {\n                  user = { ...personalForm\n                  };\n                  return user;\n                }\n\n                return user;\n              });\n              let values = Object.values(isValid);\n\n              if (values.includes(false) || values.includes('')) {\n                // alert('Неверно введена информация')\n                setFormIsValid(false);\n              } else {\n                setFormIsValid(true);\n                setGetUsers(newUsers);\n                localStorage.setItem('users', JSON.stringify(newUsers));\n                setNewPassword({\n                  oldPassword: '',\n                  newPassword: ''\n                });\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"personal-form__button\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"personal-form__button-text\",\n                children: \"Save changes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this), modalCreateShow && /*#__PURE__*/_jsxDEV(MyCreateModal, {\n        info: modalCreate,\n        show: modalCreateShow,\n        onHide: () => setModalCreateShow(false),\n        getProd: getProd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Personal, \"EsBEvMqa7t98q1nukn7lvbkvdZw=\");\n\n_c = Personal;\nexport default Personal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Personal\");","map":{"version":3,"sources":["/home/justiceitspc-1/react_app/my-app/src/components/Personal/Personal.jsx"],"names":["React","useState","Button","Offcanvas","MainTitle","ButtonCreate","MyCreateModal","modalCreate","personalFormFields","personalProps","FormInput","errorClass","validateField","ReactSVG","Sidebar","Personal","userId","JSON","parse","localStorage","getItem","isFormValid","setFormIsValid","isValid","setIsValid","productCategoryValid","firstNameValid","lastNameValid","companyValid","addressValid","oldPasswordValid","newPasswordValid","newPassword","setNewPassword","getUsers","setGetUsers","modalCreateShow","setModalCreateShow","getUser","filter","user","id","personalForm","setPersonalForm","getProd","setGetProd","console","log","handleChange","e","type","value","target","prevForm","handleChangePassword","show","setShow","handleClose","handleShow","preventDefault","menu","title","description","map","field","label","valid","placeholder","errorText","password","oldPassword","newUsers","email","values","Object","includes","setItem","stringify"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {Button, Offcanvas} from \"react-bootstrap\";\n\nimport MainTitle from \"../MainTitle\";\nimport ButtonCreate from \"../ButtonCreate\";\nimport MyCreateModal from \"../MyCreateModal\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Personal.scss';\nimport {modalCreate, personalFormFields, personalProps} from \"../../services/mock\";\nimport FormInput from \"../FormInput\";\nimport {errorClass, validateField} from \"../../services/valid\";\nimport {ReactSVG} from \"react-svg\";\nimport menu from \"../../assets/images/menu.svg\";\nimport Sidebar from \"../Sidebar\";\n\n\nconst Personal = () => {\n\tconst userId = JSON.parse(localStorage.getItem('userId'));\n\tconst [isFormValid, setFormIsValid] = useState(true)\n\tconst [isValid, setIsValid] = useState({\n\t\tproductCategoryValid: true,\n\t\tfirstNameValid: true,\n\t\tlastNameValid: true,\n\t\tcompanyValid: true,\n\t\taddressValid: true,\n\t\toldPasswordValid: true,\n\t\tnewPasswordValid: true,\n\t})\n\tconst [newPassword, setNewPassword] = useState({})\n\tconst [getUsers, setGetUsers] = useState(JSON.parse(localStorage.getItem('users')))\n\tconst [modalCreateShow, setModalCreateShow] = React.useState(false);\n\tconst getUser = getUsers.filter((user) => user.id === userId)[0]\n\tconst [personalForm, setPersonalForm] = useState(getUser);\n\n\tconst [getProd, setGetProd] = useState(JSON.parse(localStorage.getItem('products')))\n\n\tconsole.log('========>isValid', isValid);\n\tconsole.log('========>isFormValid', isFormValid);\n\t\n\tconst handleChange = (e, type) => {\n\t\tconst {value} = e.target\n\t\tsetPersonalForm((prevForm) => ({\n\t\t\t...prevForm,\n\t\t\t[type]: value,\n\t\t}))\n\t\tvalidateField(type, value, isValid, setIsValid, personalForm)\n\t}\n\n\tconst handleChangePassword = (e, type) => {\n\t\tconst {value} = e.target\n\t\tsetNewPassword((prevForm) => ({\n\t\t\t...prevForm,\n\t\t\t[type]: value,\n\t\t}))\n\t\tvalidateField(type, value, isValid, setIsValid, newPassword)\n\t}\n\n\tconst [show, setShow] = useState(false);\n\n\tconst handleClose = () => setShow(false);\n\tconst handleShow = (e) => {\n\t\te.preventDefault();\n\t\tsetShow(true);\n\t}\n\n\treturn (\n\t\t<div className=\"wrap\">\n\t\t\t<div className=\"wrap__top\">\n\t\t\t\t<div className=\"wrap__top-mobile\">\n\t\t\t\t\t<ReactSVG className=\"\" src={menu} onClick={handleShow}/>\n\t\t\t\t\t<Offcanvas show={show} onHide={handleClose}>\n\t\t\t\t\t\t<Offcanvas.Header closeButton>\n\t\t\t\t\t\t</Offcanvas.Header>\n\t\t\t\t\t\t<Offcanvas.Body>\n\t\t\t\t\t\t\t<Sidebar/>\n\t\t\t\t\t\t</Offcanvas.Body>\n\t\t\t\t\t</Offcanvas>\n\t\t\t\t</div>\n\t\t\t\t<MainTitle title={personalProps.title} description={personalProps.description}/>\n\t\t\t\t<Button className=\"button\" variant=\"primary\" onClick={() => setModalCreateShow(true)}>\n\t\t\t\t\t<ButtonCreate/>\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<hr/>\n\t\t\t<div className=\"wrap__content\">\n\t\t\t\t<form className=\"personal-form\">\n\t\t\t\t\t<div className=\"personal-form__row\">\n\t\t\t\t\t\t{personalFormFields.map((field) => (\n\t\t\t\t\t\t\t<div className=\"personal-form__el\">\n\t\t\t\t\t\t\t\t<div className=\"personal-form__item\">\n\t\t\t\t\t\t\t\t\t<label className=\"personal-form__item-title\" htmlFor={field.id}>{field.label}</label>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tclassName={`personal-form__item-input ${errorClass(isValid[field.valid])}`}\n\t\t\t\t\t\t\t\t\t\ttype={field.type}\n\t\t\t\t\t\t\t\t\t\tid={field.id}\n\t\t\t\t\t\t\t\t\t\tname={field.id}\n\t\t\t\t\t\t\t\t\t\tplaceholder={field.placeholder}\n\t\t\t\t\t\t\t\t\t\tvalue={personalForm[field.id]}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleChange(e, field.id)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{errorClass(isValid[field.valid]) && (<div className=\"error__text\">{field.errorText}</div>)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t\t{!isFormValid && (<div className=\"error__text\">Неверно введена информация</div>)}\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Button className=\"button\" variant=\"primary\" onClick={(e) => {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tif (personalForm.password === newPassword.oldPassword\n\t\t\t\t\t\t\t\t&& newPassword.oldPassword !== newPassword.newPassword) {\n\t\t\t\t\t\t\t\tpersonalForm.password = newPassword.newPassword\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst newUsers = getUsers.map((user) => {\n\t\t\t\t\t\t\t\tif (user.email === getUser.email) {\n\t\t\t\t\t\t\t\t\tuser = {...personalForm}\n\t\t\t\t\t\t\t\t\treturn user\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn user\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tlet values = Object.values((isValid));\n\t\t\t\t\t\t\tif (values.includes(false) || values.includes('')) {\n\t\t\t\t\t\t\t\t// alert('Неверно введена информация')\n\t\t\t\t\t\t\t\tsetFormIsValid(false)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsetFormIsValid(true)\n\t\t\t\t\t\t\t\tsetGetUsers(newUsers)\n\t\t\t\t\t\t\t\tlocalStorage.setItem('users', JSON.stringify(newUsers))\n\t\t\t\t\t\t\t\tsetNewPassword({oldPassword: '', newPassword: ''})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<div className=\"personal-form__button\">\n\t\t\t\t\t\t\t\t<span className=\"personal-form__button-text\">Save changes</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t\t{modalCreateShow && (\n\t\t\t\t\t<MyCreateModal\n\t\t\t\t\t\tinfo={modalCreate}\n\t\t\t\t\t\tshow={modalCreateShow}\n\t\t\t\t\t\tonHide={() => setModalCreateShow(false)}\n\t\t\t\t\t\tgetProd={getProd}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Personal;"]},"metadata":{},"sourceType":"module"}