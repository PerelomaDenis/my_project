{"ast":null,"code":"var _jsxFileName = \"/home/justiceitspc-1/react_app/my-app/client/src/components/Personal/Personal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Button, Offcanvas } from \"react-bootstrap\";\nimport MainTitle from \"../MainTitle\";\nimport ButtonCreate from \"../ButtonCreate\";\nimport MyCreateModal from \"../MyCreateModal\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Personal.scss';\nimport { modalCreate, personalFormFields, personalProps } from \"../../services/mock\";\nimport { errorClass, validateField } from \"../../services/valid\";\nimport { ReactSVG } from \"react-svg\";\nimport menu from \"../../assets/images/menu.svg\";\nimport Sidebar from \"../Sidebar\";\nimport { getOneUser, updateOneUser } from \"../../services/ajaxUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Personal = ({\n  changeIsReg,\n  removeToken\n}) => {\n  _s();\n\n  const [isFormValid, setFormIsValid] = useState(true);\n  const [isValid, setIsValid] = useState({\n    emailValid: true,\n    firstNameValid: true,\n    lastNameValid: true,\n    companyValid: true,\n    addressValid: true,\n    oldPasswordValid: true,\n    newPasswordValid: true\n  });\n  const [newPassword, setNewPassword] = useState({});\n  const [modalCreateShow, setModalCreateShow] = React.useState(false);\n  const [getUser, setGetUser] = useState({});\n  const [personalForm, setPersonalForm] = useState(getUser);\n\n  const handleChange = (e, type) => {\n    const {\n      value\n    } = e.target;\n    setPersonalForm(prevForm => ({ ...prevForm,\n      [type]: value\n    }));\n    validateField(type, value, isValid, setIsValid, personalForm);\n  };\n\n  const handleChangePassword = (e, type) => {\n    const {\n      value\n    } = e.target;\n    setNewPassword(prevForm => ({ ...prevForm,\n      [type]: value\n    }));\n    validateField(type, value, isValid, setIsValid, newPassword);\n  };\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = e => {\n    e.preventDefault();\n    setShow(true);\n  };\n\n  const getMyUser = useCallback(() => {\n    getOneUser().then(data => {\n      setGetUser(data);\n      setPersonalForm(data);\n    });\n  }, []);\n  useEffect(() => {\n    getMyUser();\n  }, []);\n  if (personalForm.newPassword === '') isValid.newPasswordValid = true;\n  if (personalForm.oldPassword === '') isValid.oldPasswordValid = true;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(Sidebar, {\n        changeIsReg: changeIsReg,\n        removeToken: removeToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrap__top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrap__top-mobile\",\n            children: [/*#__PURE__*/_jsxDEV(ReactSVG, {\n              className: \"\",\n              src: menu,\n              onClick: handleShow\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Offcanvas, {\n              show: show,\n              onHide: handleClose,\n              children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n                closeButton: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n                children: /*#__PURE__*/_jsxDEV(Sidebar, {\n                  changeIsReg: changeIsReg,\n                  removeToken: removeToken\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(MainTitle, {\n            title: personalProps.title,\n            description: personalProps.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"button\",\n            variant: \"primary\",\n            onClick: () => setModalCreateShow(true),\n            children: /*#__PURE__*/_jsxDEV(ButtonCreate, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrap__content\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"personal-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"personal-form__row\",\n              children: personalFormFields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"personal-form__el\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"personal-form__item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"personal-form__item-title\",\n                    htmlFor: field.id,\n                    children: field.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 12\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: `personal-form__item-input ${errorClass(isValid[field.valid])}`,\n                    type: field.type,\n                    id: field.id,\n                    name: field.id,\n                    placeholder: field.placeholder,\n                    value: personalForm[field.id],\n                    onChange: e => handleChange(e, field.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 12\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 11\n                }, this), errorClass(isValid[field.valid]) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"error__text\",\n                  children: field.errorText\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 10\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 8\n            }, this), !isFormValid && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error__text\",\n              children: \"Information entered wrong\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 26\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"button\",\n                variant: \"primary\",\n                onClick: e => {\n                  e.preventDefault();\n\n                  if (personalForm.password === newPassword.oldPassword && newPassword.oldPassword !== newPassword.newPassword) {\n                    personalForm.password = newPassword.newPassword;\n                  } // const newUsers = getUsers.map((user) => {\n                  // \tif (user.email === getUser.email) {\n                  // \t\tuser = {...personalForm}\n                  // \t\treturn user\n                  // \t}\n                  // \treturn user\n                  // })\n\n\n                  let values = Object.values(isValid);\n\n                  if (values.includes(false) || values.includes('')) {\n                    setFormIsValid(false);\n                  } else {\n                    setFormIsValid(true); // setGetUsers(newUsers)\n\n                    updateOneUser(getUser._id, personalForm);\n                    setPersonalForm({ ...personalForm,\n                      oldPassword: '',\n                      newPassword: ''\n                    });\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"personal-form__button\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"personal-form__button-text\",\n                    children: \"Save changes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 7\n          }, this), modalCreateShow && /*#__PURE__*/_jsxDEV(MyCreateModal, {\n            info: modalCreate,\n            show: modalCreateShow,\n            onHide: () => setModalCreateShow(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Personal, \"65Km0pWth5CfTH8bEgmRALdzs0Q=\");\n\n_c = Personal;\nexport default Personal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Personal\");","map":{"version":3,"sources":["/home/justiceitspc-1/react_app/my-app/client/src/components/Personal/Personal.jsx"],"names":["React","useCallback","useEffect","useState","Button","Offcanvas","MainTitle","ButtonCreate","MyCreateModal","modalCreate","personalFormFields","personalProps","errorClass","validateField","ReactSVG","Sidebar","getOneUser","updateOneUser","Personal","changeIsReg","removeToken","isFormValid","setFormIsValid","isValid","setIsValid","emailValid","firstNameValid","lastNameValid","companyValid","addressValid","oldPasswordValid","newPasswordValid","newPassword","setNewPassword","modalCreateShow","setModalCreateShow","getUser","setGetUser","personalForm","setPersonalForm","handleChange","e","type","value","target","prevForm","handleChangePassword","show","setShow","handleClose","handleShow","preventDefault","getMyUser","then","data","oldPassword","menu","title","description","map","field","id","label","valid","placeholder","errorText","password","values","Object","includes","_id"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useState} from \"react\";\nimport {Button, Offcanvas} from \"react-bootstrap\";\n\nimport MainTitle from \"../MainTitle\";\nimport ButtonCreate from \"../ButtonCreate\";\nimport MyCreateModal from \"../MyCreateModal\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Personal.scss';\nimport {modalCreate, personalFormFields, personalProps} from \"../../services/mock\";\nimport {errorClass, validateField} from \"../../services/valid\";\nimport {ReactSVG} from \"react-svg\";\nimport menu from \"../../assets/images/menu.svg\";\nimport Sidebar from \"../Sidebar\";\nimport {getOneUser, updateOneUser} from \"../../services/ajaxUser\";\n\n\nconst Personal = ({changeIsReg, removeToken}) => {\n\tconst [isFormValid, setFormIsValid] = useState(true)\n\tconst [isValid, setIsValid] = useState({\n\t\temailValid: true,\n\t\tfirstNameValid: true,\n\t\tlastNameValid: true,\n\t\tcompanyValid: true,\n\t\taddressValid: true,\n\t\toldPasswordValid: true,\n\t\tnewPasswordValid: true,\n\t})\n\tconst [newPassword, setNewPassword] = useState({})\n\tconst [modalCreateShow, setModalCreateShow] = React.useState(false);\n\tconst [getUser, setGetUser] = useState({})\n\tconst [personalForm, setPersonalForm] = useState(getUser);\n\n\n\tconst handleChange = (e, type) => {\n\t\tconst {value} = e.target\n\t\tsetPersonalForm((prevForm) => ({\n\t\t\t...prevForm,\n\t\t\t[type]: value,\n\t\t}))\n\t\tvalidateField(type, value, isValid, setIsValid, personalForm)\n\t}\n\n\tconst handleChangePassword = (e, type) => {\n\t\tconst {value} = e.target\n\t\tsetNewPassword((prevForm) => ({\n\t\t\t...prevForm,\n\t\t\t[type]: value,\n\t\t}))\n\t\tvalidateField(type, value, isValid, setIsValid, newPassword)\n\t}\n\n\tconst [show, setShow] = useState(false);\n\n\tconst handleClose = () => setShow(false);\n\tconst handleShow = (e) => {\n\t\te.preventDefault();\n\t\tsetShow(true);\n\t}\n\n\tconst getMyUser = useCallback(\n\t\t() => {\n\t\t\tgetOneUser()\n\t\t\t\t.then(data => {\n\t\t\t\t\tsetGetUser(data)\n\t\t\t\t\tsetPersonalForm(data)\n\t\t\t\t})\n\t\t}, [])\n\n\n\tuseEffect(() => {\n\t\tgetMyUser()\n\t}, [])\n\n\tif (personalForm.newPassword === '') isValid.newPasswordValid = true;\n\tif (personalForm.oldPassword === '') isValid.oldPasswordValid = true;\n\n\treturn (\n\t\t<div className=\"page\">\n\t\t\t<div className=\"sidebar\">\n\t\t\t\t<Sidebar changeIsReg={changeIsReg} removeToken={removeToken}/>\n\t\t\t</div>\n\t\t\t<div className=\"main\">\n\t\t\t\t<div className=\"wrap\">\n\t\t\t\t\t<div className=\"wrap__top\">\n\t\t\t\t\t\t<div className=\"wrap__top-mobile\">\n\t\t\t\t\t\t\t<ReactSVG className=\"\" src={menu} onClick={handleShow}/>\n\t\t\t\t\t\t\t<Offcanvas show={show} onHide={handleClose}>\n\t\t\t\t\t\t\t\t<Offcanvas.Header closeButton>\n\t\t\t\t\t\t\t\t</Offcanvas.Header>\n\t\t\t\t\t\t\t\t<Offcanvas.Body>\n\t\t\t\t\t\t\t\t\t<Sidebar changeIsReg={changeIsReg} removeToken={removeToken}/>\n\t\t\t\t\t\t\t\t</Offcanvas.Body>\n\t\t\t\t\t\t\t</Offcanvas>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<MainTitle title={personalProps.title} description={personalProps.description}/>\n\t\t\t\t\t\t<Button className=\"button\" variant=\"primary\" onClick={() => setModalCreateShow(true)}>\n\t\t\t\t\t\t\t<ButtonCreate/>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<hr/>\n\t\t\t\t\t<div className=\"wrap__content\">\n\t\t\t\t\t\t<form className=\"personal-form\">\n\t\t\t\t\t\t\t<div className=\"personal-form__row\">\n\t\t\t\t\t\t\t\t{personalFormFields.map((field) => (\n\t\t\t\t\t\t\t\t\t<div className=\"personal-form__el\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"personal-form__item\">\n\t\t\t\t\t\t\t\t\t\t\t<label className=\"personal-form__item-title\" htmlFor={field.id}>{field.label}</label>\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={`personal-form__item-input ${errorClass(isValid[field.valid])}`}\n\t\t\t\t\t\t\t\t\t\t\t\ttype={field.type}\n\t\t\t\t\t\t\t\t\t\t\t\tid={field.id}\n\t\t\t\t\t\t\t\t\t\t\t\tname={field.id}\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={field.placeholder}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={personalForm[field.id]}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleChange(e, field.id)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t{errorClass(isValid[field.valid]) && (<div className=\"error__text\">{field.errorText}</div>)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{!isFormValid && (<div className=\"error__text\">Information entered wrong</div>)}\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<Button className=\"button\" variant=\"primary\" onClick={(e) => {\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\t\t\t\tif (personalForm.password === newPassword.oldPassword\n\t\t\t\t\t\t\t\t\t\t&& newPassword.oldPassword !== newPassword.newPassword) {\n\t\t\t\t\t\t\t\t\t\tpersonalForm.password = newPassword.newPassword\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// const newUsers = getUsers.map((user) => {\n\t\t\t\t\t\t\t\t\t// \tif (user.email === getUser.email) {\n\t\t\t\t\t\t\t\t\t// \t\tuser = {...personalForm}\n\t\t\t\t\t\t\t\t\t// \t\treturn user\n\t\t\t\t\t\t\t\t\t// \t}\n\t\t\t\t\t\t\t\t\t// \treturn user\n\t\t\t\t\t\t\t\t\t// })\n\t\t\t\t\t\t\t\t\tlet values = Object.values((isValid));\n\t\t\t\t\t\t\t\t\tif (values.includes(false) || values.includes('')) {\n\t\t\t\t\t\t\t\t\t\tsetFormIsValid(false)\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tsetFormIsValid(true)\n\t\t\t\t\t\t\t\t\t\t// setGetUsers(newUsers)\n\t\t\t\t\t\t\t\t\t\tupdateOneUser(getUser._id, personalForm)\n\t\t\t\t\t\t\t\t\t\tsetPersonalForm({...personalForm, oldPassword: '', newPassword: ''})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<div className=\"personal-form__button\">\n\t\t\t\t\t\t\t\t\t\t<span className=\"personal-form__button-text\">Save changes</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t{modalCreateShow && (\n\t\t\t\t\t\t\t<MyCreateModal\n\t\t\t\t\t\t\t\tinfo={modalCreate}\n\t\t\t\t\t\t\t\tshow={modalCreateShow}\n\t\t\t\t\t\t\t\tonHide={() => setModalCreateShow(false)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Personal;"]},"metadata":{},"sourceType":"module"}