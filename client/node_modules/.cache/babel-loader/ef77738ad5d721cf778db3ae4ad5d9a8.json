{"ast":null,"code":"var _jsxFileName = \"/home/justiceitspc-1/react_app/my-app/client/src/components/Register/Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Register.scss';\nimport { errorClass, validateField } from \"../../services/valid\";\nimport { registerFormFields } from \"../../services/mock\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = ({\n  changeIsReg\n}) => {\n  _s();\n\n  const [isFormValid, setFormIsValid] = useState({\n    valid: true,\n    errorText: 'Information entered wrong'\n  });\n  const [isValid, setIsValid] = useState({\n    emailValid: '',\n    firstNameValid: '',\n    lastNameValid: '',\n    companyValid: '',\n    passwordValid: '',\n    confirmPasswordValid: ''\n  });\n  const [isReg, setIsReg] = useState(JSON.parse(localStorage.getItem('isReg')));\n  const [getUsers, setGetUsers] = useState(JSON.parse(localStorage.getItem('users')));\n  const [registerForm, setRegisterForm] = useState({\n    productCategory: 'IT',\n    address: \"Taganrog\",\n    id: Date.now()\n  });\n\n  const handleChange = (e, type) => {\n    const {\n      value\n    } = e.target;\n    setRegisterForm(prevForm => ({ ...prevForm,\n      [type]: value\n    }));\n    validateField(type, value, isValid, setIsValid, registerForm);\n  };\n\n  const handleRegisterClick = e => {\n    let isEmail = false;\n\n    for (let i = 0; i < getUsers.length; i++) {\n      for (let key in getUsers[i]) {\n        if (key === 'email') {\n          if (getUsers[i][key] === registerForm.email) {\n            isEmail = true;\n          }\n        }\n      }\n    }\n\n    if (!isEmail) {\n      let values = Object.values(isValid);\n\n      if (values.includes(false) || values.includes('')) {\n        setFormIsValid({\n          valid: false,\n          errorText: 'Information entered wrong'\n        });\n      } else {\n        setFormIsValid({\n          valid: true,\n          errorText: 'Information entered wrong'\n        });\n        getUsers.push(registerForm);\n        localStorage.setItem('users', JSON.stringify(getUsers));\n        setIsReg(true);\n        localStorage.setItem('isReg', JSON.stringify(true));\n        changeIsReg(true);\n      }\n    } else {\n      setFormIsValid({\n        valid: false,\n        errorText: 'This email is exist'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wraps\",\n    children: [isReg && /*#__PURE__*/_jsxDEV(Redirect, {\n      to: '/login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"register-form\",\n        children: [registerFormFields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"register-form__row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"register-form__el\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"register-form__item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"register-form__item-title\",\n                htmlFor: field.id,\n                children: field.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: `register-form__item-input ${errorClass(isValid[field.valid])}`,\n                type: field.type,\n                id: field.id,\n                name: field.id,\n                placeholder: field.placeholder,\n                value: registerForm[field.id],\n                onChange: e => handleChange(e, field.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 10\n            }, this), errorClass(isValid[field.valid]) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error__text\",\n              children: field.errorText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 48\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 8\n        }, this)), !isFormValid.valid && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error__text\",\n          children: isFormValid.errorText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"register-form__btn\",\n          onClick: () => handleRegisterClick(),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"register-form__button\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"register-form__btn-text\",\n              children: \"Create account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrap-left__question\",\n        children: [\"Already have an account?\", /*#__PURE__*/_jsxDEV(NavLink, {\n          className: \"wrap-left__question-link\",\n          to: \"/login\",\n          onClick: e => {\n            setIsReg(true);\n            localStorage.setItem('isReg', JSON.stringify(true));\n            changeIsReg(true);\n          },\n          children: \" Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap-right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Register, \"U6HTMHpLChcKlvTmHreQ1K0fSu8=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/justiceitspc-1/react_app/my-app/client/src/components/Register/Register.jsx"],"names":["React","useState","Button","NavLink","Redirect","errorClass","validateField","registerFormFields","Register","changeIsReg","isFormValid","setFormIsValid","valid","errorText","isValid","setIsValid","emailValid","firstNameValid","lastNameValid","companyValid","passwordValid","confirmPasswordValid","isReg","setIsReg","JSON","parse","localStorage","getItem","getUsers","setGetUsers","registerForm","setRegisterForm","productCategory","address","id","Date","now","handleChange","e","type","value","target","prevForm","handleRegisterClick","isEmail","i","length","key","email","values","Object","includes","push","setItem","stringify","map","field","label","placeholder"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {Button} from \"react-bootstrap\";\nimport {NavLink, Redirect} from \"react-router-dom\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Register.scss';\nimport {errorClass, validateField} from \"../../services/valid\";\nimport {registerFormFields} from \"../../services/mock\";\n\n\nconst Register = ({changeIsReg}) => {\n\tconst [isFormValid, setFormIsValid] = useState({valid: true, errorText: 'Information entered wrong'})\n\tconst [isValid, setIsValid] = useState({\n\t\temailValid: '',\n\t\tfirstNameValid: '',\n\t\tlastNameValid: '',\n\t\tcompanyValid: '',\n\t\tpasswordValid: '',\n\t\tconfirmPasswordValid: '',\n\t})\n\tconst [isReg, setIsReg] = useState(JSON.parse(localStorage.getItem('isReg')))\n\tconst [getUsers, setGetUsers] = useState(JSON.parse(localStorage.getItem('users')))\n\tconst [registerForm, setRegisterForm] = useState({\n\t\tproductCategory: 'IT',\n\t\taddress: \"Taganrog\",\n\t\tid: Date.now(),\n\t});\n\n\tconst handleChange = (e, type) => {\n\t\tconst {value} = e.target\n\t\tsetRegisterForm((prevForm) => ({\n\t\t\t...prevForm,\n\t\t\t[type]: value,\n\t\t}))\n\t\tvalidateField(type, value, isValid, setIsValid, registerForm)\n\t}\n\n\tconst handleRegisterClick = (e) => {\n\t\tlet isEmail = false;\n\t\tfor(let i=0; i < getUsers.length; i++) {\n\t\t\tfor(let key in getUsers[i]) {\n\t\t\t\tif(key === 'email') {\n\t\t\t\t\tif(getUsers[i][key] === registerForm.email) {\n\t\t\t\t\t\tisEmail = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(!isEmail) {\n\t\t\tlet values = Object.values((isValid));\n\t\t\tif(values.includes(false) || values.includes('')) {\n\t\t\t\tsetFormIsValid({valid: false, errorText: 'Information entered wrong'})\n\t\t\t} else {\n\t\t\t\tsetFormIsValid({valid: true, errorText: 'Information entered wrong'})\n\t\t\t\tgetUsers.push(registerForm);\n\t\t\t\tlocalStorage.setItem('users', JSON.stringify(getUsers));\n\t\t\t\tsetIsReg(true);\n\t\t\t\tlocalStorage.setItem('isReg', JSON.stringify(true));\n\t\t\t\tchangeIsReg(true)\n\t\t\t}\n\t\t} else {\n\t\t\tsetFormIsValid({valid: false, errorText: 'This email is exist'})\n\t\t}\n\t}\n\n\t\treturn (\n\t\t<div className=\"wraps\">\n\t\t\t{isReg && <Redirect to={'/login'}/>}\n\t\t\t{\n\t\t\t\t<div className=\"wrap-left\">\n\t\t\t\t\t<h1>Create an account</h1>\n\t\t\t\t\t<form className=\"register-form\">\n\t\t\t\t\t\t{registerFormFields.map((field) => (\n\t\t\t\t\t\t\t<div className=\"register-form__row\">\n\t\t\t\t\t\t\t\t<div className=\"register-form__el\">\n\t\t\t\t\t\t\t\t\t<div className=\"register-form__item\">\n\t\t\t\t\t\t\t\t\t\t<label className=\"register-form__item-title\" htmlFor={field.id}>{field.label}</label>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tclassName={`register-form__item-input ${errorClass(isValid[field.valid])}`}\n\t\t\t\t\t\t\t\t\t\t\ttype={field.type}\n\t\t\t\t\t\t\t\t\t\t\tid={field.id}\n\t\t\t\t\t\t\t\t\t\t\tname={field.id}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={field.placeholder}\n\t\t\t\t\t\t\t\t\t\t\tvalue={registerForm[field.id]}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleChange(e, field.id)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{errorClass(isValid[field.valid]) && (<div className=\"error__text\">{field.errorText}</div>)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t{!isFormValid.valid && (<div className=\"error__text\">{isFormValid.errorText}</div>)}\n\t\t\t\t\t\t<Button className=\"register-form__btn\" onClick={() => handleRegisterClick()}>\n\t\t\t\t\t\t\t<div className=\"register-form__button\">\n\t\t\t\t\t\t\t\t<span className=\"register-form__btn-text\">Create account</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</form>\n\t\t\t\t\t<div className=\"wrap-left__question\">\n\t\t\t\t\t\tAlready have an account?\n\t\t\t\t\t\t<NavLink className=\"wrap-left__question-link\" to=\"/login\" onClick={(e) => {\n\t\t\t\t\t\t\tsetIsReg(true);\n\t\t\t\t\t\t\tlocalStorage.setItem('isReg', JSON.stringify(true));\n\t\t\t\t\t\t\tchangeIsReg(true)\n\t\t\t\t\t\t}}> Log in</NavLink>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t<div className=\"wrap-right\">\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}