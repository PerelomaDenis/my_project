{"ast":null,"code":"var _jsxFileName = \"/home/justiceitspc-1/react_app/my-app/src/components/MySellModal/MySellModal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { ReactSVG } from \"react-svg\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport './MySellModal.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MySellModal = ({\n  info,\n  onHide,\n  show,\n  productId,\n  getProd,\n  setGetProd\n}) => {\n  _s();\n\n  const newGetProd = getProd.filter(el => el.id === productId.productId)[0];\n  const [sellForm, setSellFrom] = useState(newGetProd);\n  const [getSellProd, setGetSellProd] = useState(JSON.parse(localStorage.getItem('sellProducts')));\n  const [error, setError] = useState(false);\n\n  const handleChange = (e, type) => {\n    setError(true);\n    const {\n      value\n    } = e.target;\n    setSellFrom(prevForm => ({ ...prevForm,\n      [type]: value\n    }));\n  };\n\n  console.log('========>sellForm', sellForm);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onHide: onHide,\n    show: show,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    className: \"modal-window\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"modal-form\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: info.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: info.inputs.map(input => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            name: input.name,\n            type: input.type,\n            onChange: e => handleChange(e, input.name),\n            className: \"modal__input\",\n            placeholder: input.placeholder,\n            value: sellForm[input.name]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: \"modal__btn\",\n          onClick: e => {\n            e.preventDefault();\n            onHide();\n            getSellProd.push(sellForm);\n            localStorage.setItem('sellProducts', JSON.stringify(getSellProd));\n            sellForm.quantity = sellForm.quantity - sellForm.sellQuantity;\n\n            if (sellForm.quantity === 0) {\n              const newProd = getProd.filter(el => el.id !== productId.productId);\n              setGetProd(newProd);\n              localStorage.setItem('products', JSON.stringify(newProd));\n            } else {\n              const newChangedProd = getProd.map(prod => {\n                if (prod.id === productId.productId) {\n                  prod = { ...sellForm\n                  };\n                  return prod;\n                }\n\n                return prod;\n              });\n              setGetProd(newChangedProd);\n              localStorage.setItem('products', JSON.stringify(newChangedProd));\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"modal__btn-text\",\n            children: info.buttonText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(ReactSVG, {\n            className: \"modal__btn-icon\",\n            src: info.buttonIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"ERROR!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n};\n\n_s(MySellModal, \"7aFz0Ix/HwA36WBG6P7t4s9up3w=\");\n\n_c = MySellModal;\nexport default MySellModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"MySellModal\");","map":{"version":3,"sources":["/home/justiceitspc-1/react_app/my-app/src/components/MySellModal/MySellModal.jsx"],"names":["React","useState","ReactSVG","Button","Modal","MySellModal","info","onHide","show","productId","getProd","setGetProd","newGetProd","filter","el","id","sellForm","setSellFrom","getSellProd","setGetSellProd","JSON","parse","localStorage","getItem","error","setError","handleChange","e","type","value","target","prevForm","console","log","title","inputs","map","input","name","placeholder","preventDefault","push","setItem","stringify","quantity","sellQuantity","newProd","newChangedProd","prod","buttonText","buttonIcon"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {ReactSVG} from \"react-svg\";\nimport {Button, Modal} from \"react-bootstrap\";\n\nimport './MySellModal.scss';\n\nconst MySellModal = (\n\t{\n\t\tinfo,\n\t\tonHide,\n\t\tshow,\n\t\tproductId,\n\t\tgetProd,\n\t\tsetGetProd\n\t}) => {\n\tconst newGetProd = getProd.filter((el) => el.id === productId.productId)[0]\n\tconst [sellForm, setSellFrom] = useState(newGetProd);\n\tconst [getSellProd, setGetSellProd] = useState(JSON.parse(localStorage.getItem('sellProducts')))\n\tconst [error, setError] = useState(false);\n\n\tconst handleChange = (e, type) => {\n\t\tsetError(true)\n\t\tconst {value} = e.target\n\t\tsetSellFrom((prevForm) => ({\n\t\t\t...prevForm,\n\t\t\t[type]: value,\n\t\t}))\n\t}\n\tconsole.log('========>sellForm', sellForm);\n\n\treturn (\n\t\t<Modal\n\t\t\tonHide={onHide}\n\t\t\tshow={show}\n\t\t\tsize=\"lg\"\n\t\t\taria-labelledby=\"contained-modal-title-vcenter\"\n\t\t\tcentered\n\t\t\tclassName=\"modal-window\"\n\t\t>\n\t\t\t<form className=\"modal-form\">\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title id=\"contained-modal-title-vcenter\">\n\t\t\t\t\t\t{info.title}\n\t\t\t\t\t</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t{info.inputs.map((input) => (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tname={input.name}\n\t\t\t\t\t\t\t\ttype={input.type}\n\t\t\t\t\t\t\t\tonChange={(e) => handleChange(e, input.name)}\n\t\t\t\t\t\t\t\tclassName=\"modal__input\"\n\t\t\t\t\t\t\t\tplaceholder={input.placeholder}\n\t\t\t\t\t\t\t\tvalue={sellForm[input.name]}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button type=\"submit\" className=\"modal__btn\" onClick={(e) => {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tonHide()\n\t\t\t\t\t\tgetSellProd.push(sellForm);\n\t\t\t\t\t\tlocalStorage.setItem('sellProducts', JSON.stringify(getSellProd))\n\t\t\t\t\t\tsellForm.quantity = sellForm.quantity - sellForm.sellQuantity;\n\t\t\t\t\t\tif(sellForm.quantity === 0) {\n\t\t\t\t\t\t\tconst newProd = getProd.filter(el => el.id !== productId.productId)\n\t\t\t\t\t\t\tsetGetProd(newProd)\n\t\t\t\t\t\t\tlocalStorage.setItem('products', JSON.stringify(newProd))\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst newChangedProd = getProd.map((prod) => {\n\t\t\t\t\t\t\t\tif(prod.id === productId.productId) {\n\t\t\t\t\t\t\t\t\tprod = {...sellForm}\n\t\t\t\t\t\t\t\t\treturn prod\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn prod\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tsetGetProd(newChangedProd)\n\t\t\t\t\t\t\tlocalStorage.setItem('products', JSON.stringify(newChangedProd))\n\t\t\t\t\t\t}\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<span className=\"modal__btn-text\">{info.buttonText}</span>\n\t\t\t\t\t\t<ReactSVG className=\"modal__btn-icon\" src={info.buttonIcon}/>\n\t\t\t\t\t</Button>\n\t\t\t\t\t{error && <p>ERROR!</p>}\n\t\t\t\t</Modal.Footer>\n\t\t\t</form>\n\t\t</Modal>\n\t)\n}\n\nexport default MySellModal;"]},"metadata":{},"sourceType":"module"}