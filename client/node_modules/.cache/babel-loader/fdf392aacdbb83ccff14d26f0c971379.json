{"ast":null,"code":"var _jsxFileName = \"/home/justiceitspc-1/react_app/my-app/client/src/components/Register/Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Register.scss';\nimport { errorClass, validateField } from \"../../services/valid\";\nimport { registerFormFields } from \"../../services/mock\";\nimport { registration } from \"../../services/ajaxUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [isFormValid, setFormIsValid] = useState({\n    valid: true,\n    errorText: 'Information entered wrong'\n  });\n  const [isValid, setIsValid] = useState({\n    emailValid: '',\n    firstNameValid: '',\n    lastNameValid: '',\n    companyValid: true,\n    passwordValid: '',\n    confirmPasswordValid: ''\n  });\n  const [registerForm, setRegisterForm] = useState({});\n  const [registerError, setRegisterError] = useState('');\n  const [isReg, setIsReg] = useState(false);\n\n  const handleChange = (e, type) => {\n    const {\n      value\n    } = e.target;\n    setRegisterForm(prevForm => ({ ...prevForm,\n      [type]: value\n    }));\n    validateField(type, value, isValid, setIsValid, registerForm);\n  };\n\n  const redirect = () => /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 25\n  }, this);\n\n  const getApiCall = useCallback(data => {\n    registration(data).then(r => {\n      console.log('========>r', r);\n      redirect();\n    }).catch(e => {\n      setRegisterError('This email is exist');\n    });\n  }, []);\n\n  const handleRegisterClick = e => {\n    let values = Object.values(isValid);\n\n    if (values.includes(false) || values.includes('')) {\n      setFormIsValid({\n        valid: false,\n        errorText: 'Information entered wrong'\n      });\n    } else {\n      setFormIsValid({\n        valid: true,\n        errorText: 'Information entered wrong'\n      });\n      getApiCall(registerForm);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wraps\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"register-form\",\n        children: [registerFormFields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"register-form__row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"register-form__el\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"register-form__item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"register-form__item-title\",\n                htmlFor: field.id,\n                children: field.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: `register-form__item-input ${errorClass(isValid[field.valid])}`,\n                type: field.type,\n                id: field.id,\n                name: field.id,\n                placeholder: field.placeholder,\n                value: registerForm[field.id],\n                onChange: e => handleChange(e, field.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 10\n            }, this), errorClass(isValid[field.valid]) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error__text\",\n              children: field.errorText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 48\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 8\n        }, this)), !isFormValid.valid && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error__text\",\n          children: isFormValid.errorText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 31\n        }, this), registerError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error__text\",\n          children: registerError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"register-form__btn\",\n          onClick: () => {\n            handleRegisterClick();\n            redirect();\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"register-form__button\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"register-form__btn-text\",\n              children: \"Create account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrap-left__question\",\n        children: [\"Already have an account?\", /*#__PURE__*/_jsxDEV(NavLink, {\n          className: \"wrap-left__question-link\",\n          to: \"/login\",\n          children: \" Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap-right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Register, \"7lao4d6Wj/EYwC5PO1swbRO3NHk=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/justiceitspc-1/react_app/my-app/client/src/components/Register/Register.jsx"],"names":["React","useCallback","useState","Button","NavLink","Redirect","errorClass","validateField","registerFormFields","registration","Register","isFormValid","setFormIsValid","valid","errorText","isValid","setIsValid","emailValid","firstNameValid","lastNameValid","companyValid","passwordValid","confirmPasswordValid","registerForm","setRegisterForm","registerError","setRegisterError","isReg","setIsReg","handleChange","e","type","value","target","prevForm","redirect","getApiCall","data","then","r","console","log","catch","handleRegisterClick","values","Object","includes","map","field","id","label","placeholder"],"mappings":"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","sourcesContent":["import React, {useCallback, useState} from \"react\";\nimport {Button} from \"react-bootstrap\";\nimport {NavLink, Redirect} from \"react-router-dom\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Register.scss';\nimport {errorClass, validateField} from \"../../services/valid\";\nimport {registerFormFields} from \"../../services/mock\";\nimport {registration} from \"../../services/ajaxUser\";\n\n\nconst Register = () => {\n\tconst [isFormValid, setFormIsValid] = useState({valid: true, errorText: 'Information entered wrong'})\n\tconst [isValid, setIsValid] = useState({\n\t\temailValid: '',\n\t\tfirstNameValid: '',\n\t\tlastNameValid: '',\n\t\tcompanyValid: true,\n\t\tpasswordValid: '',\n\t\tconfirmPasswordValid: '',\n\t})\n\tconst [registerForm, setRegisterForm] = useState({});\n\tconst [registerError, setRegisterError] = useState('');\n\tconst [isReg, setIsReg] = useState(false);\n\n\tconst handleChange = (e, type) => {\n\t\tconst {value} = e.target\n\t\tsetRegisterForm((prevForm) => ({\n\t\t\t...prevForm,\n\t\t\t[type]: value,\n\t\t}))\n\t\tvalidateField(type, value, isValid, setIsValid, registerForm)\n\t}\n\n\tconst redirect = () => <Redirect to=\"/login\"/>\n\n\tconst getApiCall = useCallback(\n\t\t(data) => {\n\t\t\tregistration(data)\n\t\t\t\t.then((r) => {\n\t\t\t\t\tconsole.log('========>r', r);\n\t\t\t\t\tredirect()\n\t\t\t\t})\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tsetRegisterError('This email is exist')\n\t\t\t\t})\n\n\t\t}, [])\n\tconst handleRegisterClick = (e) => {\n\t\tlet values = Object.values((isValid));\n\t\tif (values.includes(false) || values.includes('')) {\n\t\t\tsetFormIsValid({valid: false, errorText: 'Information entered wrong'})\n\t\t} else {\n\t\t\tsetFormIsValid({valid: true, errorText: 'Information entered wrong'})\n\t\t\tgetApiCall(registerForm)\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"wraps\">\n\t\t\t{\n\t\t\t\t<div className=\"wrap-left\">\n\t\t\t\t\t<h1>Create an account</h1>\n\t\t\t\t\t<form className=\"register-form\">\n\t\t\t\t\t\t{registerFormFields.map((field) => (\n\t\t\t\t\t\t\t<div className=\"register-form__row\">\n\t\t\t\t\t\t\t\t<div className=\"register-form__el\">\n\t\t\t\t\t\t\t\t\t<div className=\"register-form__item\">\n\t\t\t\t\t\t\t\t\t\t<label className=\"register-form__item-title\" htmlFor={field.id}>{field.label}</label>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tclassName={`register-form__item-input ${errorClass(isValid[field.valid])}`}\n\t\t\t\t\t\t\t\t\t\t\ttype={field.type}\n\t\t\t\t\t\t\t\t\t\t\tid={field.id}\n\t\t\t\t\t\t\t\t\t\t\tname={field.id}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={field.placeholder}\n\t\t\t\t\t\t\t\t\t\t\tvalue={registerForm[field.id]}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleChange(e, field.id)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{errorClass(isValid[field.valid]) && (<div className=\"error__text\">{field.errorText}</div>)}\n\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t{!isFormValid.valid && (<div className=\"error__text\">{isFormValid.errorText}</div>)}\n\t\t\t\t\t\t{registerError && (<div className=\"error__text\">{registerError}</div>)}\n\t\t\t\t\t\t<Button className=\"register-form__btn\" onClick={() => {\n\t\t\t\t\t\t\thandleRegisterClick()\n\t\t\t\t\t\t\tredirect()\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<div className=\"register-form__button\">\n\t\t\t\t\t\t\t\t<span className=\"register-form__btn-text\">Create account</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</form>\n\t\t\t\t\t<div className=\"wrap-left__question\">\n\t\t\t\t\t\tAlready have an account?\n\t\t\t\t\t\t<NavLink className=\"wrap-left__question-link\" to=\"/login\"> Log in</NavLink>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t<div className=\"wrap-right\">\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}